; from /usr/include/gtk-2.0/gdk/gdkx.h
; struct definitions ...
(struct Color 
  (in-module Gdk)
  (c-name GdkColor)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
)
(struct Cursor 
  (in-module Gdk)
  (c-name GdkCursor)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
)
(struct EventAny 
  (in-module Gdk)
  (c-name GdkEventAny)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
)
(struct EventExpose 
  (in-module Gdk)
  (c-name GdkEventExpose)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
)
(struct EventNoExpose 
  (in-module Gdk)
  (c-name GdkEventNoExpose)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
)
(struct EventVisibility 
  (in-module Gdk)
  (c-name GdkEventVisibility)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
)
(struct EventMotion 
  (in-module Gdk)
  (c-name GdkEventMotion)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
)
(struct EventButton 
  (in-module Gdk)
  (c-name GdkEventButton)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
)
(struct EventScroll 
  (in-module Gdk)
  (c-name GdkEventScroll)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
)
(struct EventKey 
  (in-module Gdk)
  (c-name GdkEventKey)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
)
(struct EventCrossing 
  (in-module Gdk)
  (c-name GdkEventCrossing)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
)
(struct EventFocus 
  (in-module Gdk)
  (c-name GdkEventFocus)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
)
(struct EventConfigure 
  (in-module Gdk)
  (c-name GdkEventConfigure)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
)
(struct EventProperty 
  (in-module Gdk)
  (c-name GdkEventProperty)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
)
(struct EventSelection 
  (in-module Gdk)
  (c-name GdkEventSelection)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
)
(struct EventProximity 
  (in-module Gdk)
  (c-name GdkEventProximity)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
)
(struct EventSetting 
  (in-module Gdk)
  (c-name GdkEventSetting)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
)
(struct EventWindowState 
  (in-module Gdk)
  (c-name GdkEventWindowState)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
)
(struct EventDND 
  (in-module Gdk)
  (c-name GdkEventDND)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
)
(struct Font 
  (in-module Gdk)
  (c-name GdkFont)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
)
(struct GCValues 
  (in-module Gdk)
  (c-name GdkGCValues)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
)
(struct DeviceKey 
  (in-module Gdk)
  (c-name GdkDeviceKey)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
)
(struct DeviceAxis 
  (in-module Gdk)
  (c-name GdkDeviceAxis)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
)
(struct Device 
  (in-module Gdk)
  (c-name GdkDevice)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
)
(struct TimeCoord 
  (in-module Gdk)
  (c-name GdkTimeCoord)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
)
(struct KeymapKey 
  (in-module Gdk)
  (c-name GdkKeymapKey)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
)
(struct PangoAttrStipple 
  (in-module Gdk)
  (c-name GdkPangoAttrStipple)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name GdkBitmap *stipple))
)
(struct PangoAttrEmbossed 
  (in-module Gdk)
  (c-name GdkPangoAttrEmbossed)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name GdkBitmap *stipple))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name gboolean embossed))
)
(struct RgbCmap 
  (in-module Gdk)
  (c-name GdkRgbCmap)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name GdkBitmap *stipple))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name gboolean embossed))
  (field (type-and-name guint32 colors[256]))
  (field (type-and-name gint n_colors))
  (field (type-and-name GSList *info_list))
)
(struct Point 
  (in-module Gdk)
  (c-name GdkPoint)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name GdkBitmap *stipple))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name gboolean embossed))
  (field (type-and-name guint32 colors[256]))
  (field (type-and-name gint n_colors))
  (field (type-and-name GSList *info_list))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
)
(struct Rectangle 
  (in-module Gdk)
  (c-name GdkRectangle)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name GdkBitmap *stipple))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name gboolean embossed))
  (field (type-and-name guint32 colors[256]))
  (field (type-and-name gint n_colors))
  (field (type-and-name GSList *info_list))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
)
(struct Segment 
  (in-module Gdk)
  (c-name GdkSegment)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name GdkBitmap *stipple))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name gboolean embossed))
  (field (type-and-name guint32 colors[256]))
  (field (type-and-name gint n_colors))
  (field (type-and-name GSList *info_list))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name gint x1))
  (field (type-and-name gint y1))
  (field (type-and-name gint x2))
  (field (type-and-name gint y2))
)
(struct Span 
  (in-module Gdk)
  (c-name GdkSpan)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name GdkBitmap *stipple))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name gboolean embossed))
  (field (type-and-name guint32 colors[256]))
  (field (type-and-name gint n_colors))
  (field (type-and-name GSList *info_list))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name gint x1))
  (field (type-and-name gint y1))
  (field (type-and-name gint x2))
  (field (type-and-name gint y2))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint width))
)
(struct Visual 
  (in-module Gdk)
  (c-name GdkVisual)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name GdkBitmap *stipple))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name gboolean embossed))
  (field (type-and-name guint32 colors[256]))
  (field (type-and-name gint n_colors))
  (field (type-and-name GSList *info_list))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name gint x1))
  (field (type-and-name gint y1))
  (field (type-and-name gint x2))
  (field (type-and-name gint y2))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint width))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name GdkVisualType type))
  (field (type-and-name gint depth))
  (field (type-and-name GdkByteOrder byte_order))
  (field (type-and-name gint colormap_size))
  (field (type-and-name gint bits_per_rgb))
  (field (type-and-name guint32 red_mask))
  (field (type-and-name gint red_shift))
  (field (type-and-name gint red_prec))
  (field (type-and-name guint32 green_mask))
  (field (type-and-name gint green_shift))
  (field (type-and-name gint green_prec))
  (field (type-and-name guint32 blue_mask))
  (field (type-and-name gint blue_shift))
  (field (type-and-name gint blue_prec))
)
(struct WindowAttr 
  (in-module Gdk)
  (c-name GdkWindowAttr)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name GdkBitmap *stipple))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name gboolean embossed))
  (field (type-and-name guint32 colors[256]))
  (field (type-and-name gint n_colors))
  (field (type-and-name GSList *info_list))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name gint x1))
  (field (type-and-name gint y1))
  (field (type-and-name gint x2))
  (field (type-and-name gint y2))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint width))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name GdkVisualType type))
  (field (type-and-name gint depth))
  (field (type-and-name GdkByteOrder byte_order))
  (field (type-and-name gint colormap_size))
  (field (type-and-name gint bits_per_rgb))
  (field (type-and-name guint32 red_mask))
  (field (type-and-name gint red_shift))
  (field (type-and-name gint red_prec))
  (field (type-and-name guint32 green_mask))
  (field (type-and-name gint green_shift))
  (field (type-and-name gint green_prec))
  (field (type-and-name guint32 blue_mask))
  (field (type-and-name gint blue_shift))
  (field (type-and-name gint blue_prec))
  (field (type-and-name gchar *title))
  (field (type-and-name gint event_mask))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkWindowClass wclass))
  (field (type-and-name GdkVisual *visual))
  (field (type-and-name GdkColormap *colormap))
  (field (type-and-name GdkWindowType window_type))
  (field (type-and-name GdkCursor *cursor))
  (field (type-and-name gchar *wmclass_name))
  (field (type-and-name gchar *wmclass_class))
  (field (type-and-name gboolean override_redirect))
)
(struct Geometry 
  (in-module Gdk)
  (c-name GdkGeometry)
  (field (type-and-name guint32 pixel))
  (field (type-and-name guint16 red))
  (field (type-and-name guint16 green))
  (field (type-and-name guint16 blue))
  (field (type-and-name GdkCursorType type))
  (field (type-and-name guint ref_count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkRectangle area))
  (field (type-and-name GdkRegion *region))
  (field (type-and-name gint count))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkVisibilityState state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name gint16 is_hint))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble *axes))
  (field (type-and-name guint state))
  (field (type-and-name guint button))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name guint state))
  (field (type-and-name GdkScrollDirection direction))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name gdouble x_root,))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name guint keyval))
  (field (type-and-name gint length))
  (field (type-and-name gchar *string))
  (field (type-and-name guint16 hardware_keycode))
  (field (type-and-name guint8 group))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindow *subwindow))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble x))
  (field (type-and-name gdouble y))
  (field (type-and-name gdouble x_root))
  (field (type-and-name gdouble y_root))
  (field (type-and-name GdkCrossingMode mode))
  (field (type-and-name GdkNotifyType detail))
  (field (type-and-name gboolean focus))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint16 in))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom atom))
  (field (type-and-name guint32 time))
  (field (type-and-name guint state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkAtom selection))
  (field (type-and-name GdkAtom target))
  (field (type-and-name GdkAtom property))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkNativeWindow requestor))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name guint32 time))
  (field (type-and-name GdkDevice *device))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkSettingAction action))
  (field (type-and-name char *name))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkWindowState changed_mask))
  (field (type-and-name GdkWindowState new_window_state))
  (field (type-and-name GdkEventType type))
  (field (type-and-name GdkWindow *window))
  (field (type-and-name gint8 send_event))
  (field (type-and-name GdkDragContext *context))
  (field (type-and-name guint32 time))
  (field (type-and-name gshort x_root,))
  (field (type-and-name GdkFontType type))
  (field (type-and-name gint ascent))
  (field (type-and-name gint descent))
  (field (type-and-name GdkColor foreground))
  (field (type-and-name GdkColor background))
  (field (type-and-name GdkFont *font))
  (field (type-and-name GdkFunction function))
  (field (type-and-name GdkFill fill))
  (field (type-and-name GdkPixmap *tile))
  (field (type-and-name GdkPixmap *stipple))
  (field (type-and-name GdkPixmap *clip_mask))
  (field (type-and-name GdkSubwindowMode subwindow_mode))
  (field (type-and-name gint ts_x_origin))
  (field (type-and-name gint ts_y_origin))
  (field (type-and-name gint clip_x_origin))
  (field (type-and-name gint clip_y_origin))
  (field (type-and-name gint graphics_exposures))
  (field (type-and-name gint line_width))
  (field (type-and-name GdkLineStyle line_style))
  (field (type-and-name GdkCapStyle cap_style))
  (field (type-and-name GdkJoinStyle join_style))
  (field (type-and-name guint keyval))
  (field (type-and-name GdkModifierType modifiers))
  (field (type-and-name GdkAxisUse use))
  (field (type-and-name gdouble min))
  (field (type-and-name gdouble max))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name gchar *name))
  (field (type-and-name GdkInputSource source))
  (field (type-and-name GdkInputMode mode))
  (field (type-and-name gboolean has_cursor))
  (field (type-and-name gint num_axes))
  (field (type-and-name GdkDeviceAxis *axes))
  (field (type-and-name gint num_keys))
  (field (type-and-name GdkDeviceKey *keys))
  (field (type-and-name guint32 time))
  (field (type-and-name gdouble axes[GDK_MAX_TIMECOORD_AXES]))
  (field (type-and-name guint keycode))
  (field (type-and-name gint group))
  (field (type-and-name gint level))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name GdkBitmap *stipple))
  (field (type-and-name PangoAttribute attr))
  (field (type-and-name gboolean embossed))
  (field (type-and-name guint32 colors[256]))
  (field (type-and-name gint n_colors))
  (field (type-and-name GSList *info_list))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name gint x1))
  (field (type-and-name gint y1))
  (field (type-and-name gint x2))
  (field (type-and-name gint y2))
  (field (type-and-name gint x))
  (field (type-and-name gint y))
  (field (type-and-name gint width))
  (field (type-and-name GObject parent_instance))
  (field (type-and-name GdkVisualType type))
  (field (type-and-name gint depth))
  (field (type-and-name GdkByteOrder byte_order))
  (field (type-and-name gint colormap_size))
  (field (type-and-name gint bits_per_rgb))
  (field (type-and-name guint32 red_mask))
  (field (type-and-name gint red_shift))
  (field (type-and-name gint red_prec))
  (field (type-and-name guint32 green_mask))
  (field (type-and-name gint green_shift))
  (field (type-and-name gint green_prec))
  (field (type-and-name guint32 blue_mask))
  (field (type-and-name gint blue_shift))
  (field (type-and-name gint blue_prec))
  (field (type-and-name gchar *title))
  (field (type-and-name gint event_mask))
  (field (type-and-name gint x,))
  (field (type-and-name gint width))
  (field (type-and-name gint height))
  (field (type-and-name GdkWindowClass wclass))
  (field (type-and-name GdkVisual *visual))
  (field (type-and-name GdkColormap *colormap))
  (field (type-and-name GdkWindowType window_type))
  (field (type-and-name GdkCursor *cursor))
  (field (type-and-name gchar *wmclass_name))
  (field (type-and-name gchar *wmclass_class))
  (field (type-and-name gboolean override_redirect))
  (field (type-and-name gint min_width))
  (field (type-and-name gint min_height))
  (field (type-and-name gint max_width))
  (field (type-and-name gint max_height))
  (field (type-and-name gint base_width))
  (field (type-and-name gint base_height))
  (field (type-and-name gint width_inc))
  (field (type-and-name gint height_inc))
  (field (type-and-name gdouble min_aspect))
  (field (type-and-name gdouble max_aspect))
  (field (type-and-name GdkGravity win_gravity))
)
;; -*- scheme -*-
; object definitions ...
(object Colormap 
  (in-module Gdk)
  (parent GObject)
  (c-name GdkColormap )
)

(object Display 
  (in-module Gdk)
  (parent GObject)
  (c-name GdkDisplay )
)

(object DragContext 
  (in-module Gdk)
  (parent GObject)
  (c-name GdkDragContext )
)

(object Drawable 
  (in-module Gdk)
  (parent GObject)
  (c-name GdkDrawable )
)

(object GC 
  (in-module Gdk)
  (parent GObject)
  (c-name GdkGC )
)

(object Image 
  (in-module Gdk)
  (parent GObject)
  (c-name GdkImage )
)

(object Keymap 
  (in-module Gdk)
  (parent GObject)
  (c-name GdkKeymap )
)

(object PixmapObject 
  (in-module Gdk)
  (parent Drawable (Gdk))
  (c-name GdkPixmapObject )
)

(object Screen 
  (in-module Gdk)
  (parent GObject)
  (c-name GdkScreen )
)

(object WindowObject 
  (in-module Gdk)
  (parent Drawable (Gdk))
  (c-name GdkWindowObject )
)

;; Enumerations and flags ...

(enum CursorType
  (in-module gdk)
  (c-name GdkCursorType)
  (value (name x_cursor) (c-name GDK_X_CURSOR))
  (value (name arrow) (c-name GDK_ARROW))
  (value (name based_arrow_down) (c-name GDK_BASED_ARROW_DOWN))
  (value (name based_arrow_up) (c-name GDK_BASED_ARROW_UP))
  (value (name boat) (c-name GDK_BOAT))
  (value (name bogosity) (c-name GDK_BOGOSITY))
  (value (name bottom_left_corner) (c-name GDK_BOTTOM_LEFT_CORNER))
  (value (name bottom_right_corner) (c-name GDK_BOTTOM_RIGHT_CORNER))
  (value (name bottom_side) (c-name GDK_BOTTOM_SIDE))
  (value (name bottom_tee) (c-name GDK_BOTTOM_TEE))
  (value (name box_spiral) (c-name GDK_BOX_SPIRAL))
  (value (name center_ptr) (c-name GDK_CENTER_PTR))
  (value (name circle) (c-name GDK_CIRCLE))
  (value (name clock) (c-name GDK_CLOCK))
  (value (name coffee_mug) (c-name GDK_COFFEE_MUG))
  (value (name cross) (c-name GDK_CROSS))
  (value (name cross_reverse) (c-name GDK_CROSS_REVERSE))
  (value (name crosshair) (c-name GDK_CROSSHAIR))
  (value (name diamond_cross) (c-name GDK_DIAMOND_CROSS))
  (value (name dot) (c-name GDK_DOT))
  (value (name dotbox) (c-name GDK_DOTBOX))
  (value (name double_arrow) (c-name GDK_DOUBLE_ARROW))
  (value (name draft_large) (c-name GDK_DRAFT_LARGE))
  (value (name draft_small) (c-name GDK_DRAFT_SMALL))
  (value (name draped_box) (c-name GDK_DRAPED_BOX))
  (value (name exchange) (c-name GDK_EXCHANGE))
  (value (name fleur) (c-name GDK_FLEUR))
  (value (name gobbler) (c-name GDK_GOBBLER))
  (value (name gumby) (c-name GDK_GUMBY))
  (value (name hand1) (c-name GDK_HAND1))
  (value (name hand2) (c-name GDK_HAND2))
  (value (name heart) (c-name GDK_HEART))
  (value (name icon) (c-name GDK_ICON))
  (value (name iron_cross) (c-name GDK_IRON_CROSS))
  (value (name left_ptr) (c-name GDK_LEFT_PTR))
  (value (name left_side) (c-name GDK_LEFT_SIDE))
  (value (name left_tee) (c-name GDK_LEFT_TEE))
  (value (name leftbutton) (c-name GDK_LEFTBUTTON))
  (value (name ll_angle) (c-name GDK_LL_ANGLE))
  (value (name lr_angle) (c-name GDK_LR_ANGLE))
  (value (name man) (c-name GDK_MAN))
  (value (name middlebutton) (c-name GDK_MIDDLEBUTTON))
  (value (name mouse) (c-name GDK_MOUSE))
  (value (name pencil) (c-name GDK_PENCIL))
  (value (name pirate) (c-name GDK_PIRATE))
  (value (name plus) (c-name GDK_PLUS))
  (value (name question_arrow) (c-name GDK_QUESTION_ARROW))
  (value (name right_ptr) (c-name GDK_RIGHT_PTR))
  (value (name right_side) (c-name GDK_RIGHT_SIDE))
  (value (name right_tee) (c-name GDK_RIGHT_TEE))
  (value (name rightbutton) (c-name GDK_RIGHTBUTTON))
  (value (name rtl_logo) (c-name GDK_RTL_LOGO))
  (value (name sailboat) (c-name GDK_SAILBOAT))
  (value (name sb_down_arrow) (c-name GDK_SB_DOWN_ARROW))
  (value (name sb_h_double_arrow) (c-name GDK_SB_H_DOUBLE_ARROW))
  (value (name sb_left_arrow) (c-name GDK_SB_LEFT_ARROW))
  (value (name sb_right_arrow) (c-name GDK_SB_RIGHT_ARROW))
  (value (name sb_up_arrow) (c-name GDK_SB_UP_ARROW))
  (value (name sb_v_double_arrow) (c-name GDK_SB_V_DOUBLE_ARROW))
  (value (name shuttle) (c-name GDK_SHUTTLE))
  (value (name sizing) (c-name GDK_SIZING))
  (value (name spider) (c-name GDK_SPIDER))
  (value (name spraycan) (c-name GDK_SPRAYCAN))
  (value (name star) (c-name GDK_STAR))
  (value (name target) (c-name GDK_TARGET))
  (value (name tcross) (c-name GDK_TCROSS))
  (value (name top_left_arrow) (c-name GDK_TOP_LEFT_ARROW))
  (value (name top_left_corner) (c-name GDK_TOP_LEFT_CORNER))
  (value (name top_right_corner) (c-name GDK_TOP_RIGHT_CORNER))
  (value (name top_side) (c-name GDK_TOP_SIDE))
  (value (name top_tee) (c-name GDK_TOP_TEE))
  (value (name trek) (c-name GDK_TREK))
  (value (name ul_angle) (c-name GDK_UL_ANGLE))
  (value (name umbrella) (c-name GDK_UMBRELLA))
  (value (name ur_angle) (c-name GDK_UR_ANGLE))
  (value (name watch) (c-name GDK_WATCH))
  (value (name xterm) (c-name GDK_XTERM))
  (value (name last_cursor) (c-name GDK_LAST_CURSOR))
  (value (name cursor_is_pixmap) (c-name GDK_CURSOR_IS_PIXMAP))
)

(enum DragAction
  (in-module gdk)
  (c-name GdkDragAction)
  (value (name default) (c-name GDK_ACTION_DEFAULT))
  (value (name copy) (c-name GDK_ACTION_COPY))
  (value (name move) (c-name GDK_ACTION_MOVE))
  (value (name link) (c-name GDK_ACTION_LINK))
  (value (name private) (c-name GDK_ACTION_PRIVATE))
  (value (name ask) (c-name GDK_ACTION_ASK))
)

(enum DragProtocol
  (in-module gdk)
  (c-name GdkDragProtocol)
  (value (name motif) (c-name GDK_DRAG_PROTO_MOTIF))
  (value (name xdnd) (c-name GDK_DRAG_PROTO_XDND))
  (value (name rootwin) (c-name GDK_DRAG_PROTO_ROOTWIN))
  (value (name none) (c-name GDK_DRAG_PROTO_NONE))
  (value (name win32_dropfiles) (c-name GDK_DRAG_PROTO_WIN32_DROPFILES))
  (value (name ole2) (c-name GDK_DRAG_PROTO_OLE2))
  (value (name local) (c-name GDK_DRAG_PROTO_LOCAL))
)

(enum FilterReturn
  (in-module gdk)
  (c-name GdkFilterReturn)
  (value (name continue) (c-name GDK_FILTER_CONTINUE))
  (value (name translate) (c-name GDK_FILTER_TRANSLATE))
  (value (name remove) (c-name GDK_FILTER_REMOVE))
)

(enum EventType
  (in-module gdk)
  (c-name GdkEventType)
  (value (name nothing) (c-name GDK_NOTHING))
  (value (name delete) (c-name GDK_DELETE))
  (value (name destroy) (c-name GDK_DESTROY))
  (value (name expose) (c-name GDK_EXPOSE))
  (value (name motion_notify) (c-name GDK_MOTION_NOTIFY))
  (value (name button_press) (c-name GDK_BUTTON_PRESS))
  (value (name 2button_press) (c-name GDK_2BUTTON_PRESS))
  (value (name 3button_press) (c-name GDK_3BUTTON_PRESS))
  (value (name button_release) (c-name GDK_BUTTON_RELEASE))
  (value (name key_press) (c-name GDK_KEY_PRESS))
  (value (name key_release) (c-name GDK_KEY_RELEASE))
  (value (name enter_notify) (c-name GDK_ENTER_NOTIFY))
  (value (name leave_notify) (c-name GDK_LEAVE_NOTIFY))
  (value (name focus_change) (c-name GDK_FOCUS_CHANGE))
  (value (name configure) (c-name GDK_CONFIGURE))
  (value (name map) (c-name GDK_MAP))
  (value (name unmap) (c-name GDK_UNMAP))
  (value (name property_notify) (c-name GDK_PROPERTY_NOTIFY))
  (value (name selection_clear) (c-name GDK_SELECTION_CLEAR))
  (value (name selection_request) (c-name GDK_SELECTION_REQUEST))
  (value (name selection_notify) (c-name GDK_SELECTION_NOTIFY))
  (value (name proximity_in) (c-name GDK_PROXIMITY_IN))
  (value (name proximity_out) (c-name GDK_PROXIMITY_OUT))
  (value (name drag_enter) (c-name GDK_DRAG_ENTER))
  (value (name drag_leave) (c-name GDK_DRAG_LEAVE))
  (value (name drag_motion) (c-name GDK_DRAG_MOTION))
  (value (name drag_status) (c-name GDK_DRAG_STATUS))
  (value (name drop_start) (c-name GDK_DROP_START))
  (value (name drop_finished) (c-name GDK_DROP_FINISHED))
  (value (name client_event) (c-name GDK_CLIENT_EVENT))
  (value (name visibility_notify) (c-name GDK_VISIBILITY_NOTIFY))
  (value (name no_expose) (c-name GDK_NO_EXPOSE))
  (value (name scroll) (c-name GDK_SCROLL))
  (value (name window_state) (c-name GDK_WINDOW_STATE))
  (value (name setting) (c-name GDK_SETTING))
)

(enum EventMask
  (in-module gdk)
  (c-name GdkEventMask)
  (value (name exposure_mask) (c-name GDK_EXPOSURE_MASK))
  (value (name pointer_motion_mask) (c-name GDK_POINTER_MOTION_MASK))
  (value (name pointer_motion_hint_mask) (c-name GDK_POINTER_MOTION_HINT_MASK))
  (value (name button_motion_mask) (c-name GDK_BUTTON_MOTION_MASK))
  (value (name button1_motion_mask) (c-name GDK_BUTTON1_MOTION_MASK))
  (value (name button2_motion_mask) (c-name GDK_BUTTON2_MOTION_MASK))
  (value (name button3_motion_mask) (c-name GDK_BUTTON3_MOTION_MASK))
  (value (name button_press_mask) (c-name GDK_BUTTON_PRESS_MASK))
  (value (name button_release_mask) (c-name GDK_BUTTON_RELEASE_MASK))
  (value (name key_press_mask) (c-name GDK_KEY_PRESS_MASK))
  (value (name key_release_mask) (c-name GDK_KEY_RELEASE_MASK))
  (value (name enter_notify_mask) (c-name GDK_ENTER_NOTIFY_MASK))
  (value (name leave_notify_mask) (c-name GDK_LEAVE_NOTIFY_MASK))
  (value (name focus_change_mask) (c-name GDK_FOCUS_CHANGE_MASK))
  (value (name structure_mask) (c-name GDK_STRUCTURE_MASK))
  (value (name property_change_mask) (c-name GDK_PROPERTY_CHANGE_MASK))
  (value (name visibility_notify_mask) (c-name GDK_VISIBILITY_NOTIFY_MASK))
  (value (name proximity_in_mask) (c-name GDK_PROXIMITY_IN_MASK))
  (value (name proximity_out_mask) (c-name GDK_PROXIMITY_OUT_MASK))
  (value (name substructure_mask) (c-name GDK_SUBSTRUCTURE_MASK))
  (value (name scroll_mask) (c-name GDK_SCROLL_MASK))
  (value (name all_events_mask) (c-name GDK_ALL_EVENTS_MASK))
)

(enum VisibilityState
  (in-module gdk)
  (c-name GdkVisibilityState)
  (value (name unobscured) (c-name GDK_VISIBILITY_UNOBSCURED))
  (value (name partial) (c-name GDK_VISIBILITY_PARTIAL))
  (value (name fully_obscured) (c-name GDK_VISIBILITY_FULLY_OBSCURED))
)

(enum ScrollDirection
  (in-module gdk)
  (c-name GdkScrollDirection)
  (value (name up) (c-name GDK_SCROLL_UP))
  (value (name down) (c-name GDK_SCROLL_DOWN))
  (value (name left) (c-name GDK_SCROLL_LEFT))
  (value (name right) (c-name GDK_SCROLL_RIGHT))
)

(enum NotifyType
  (in-module gdk)
  (c-name GdkNotifyType)
  (value (name ancestor) (c-name GDK_NOTIFY_ANCESTOR))
  (value (name virtual) (c-name GDK_NOTIFY_VIRTUAL))
  (value (name inferior) (c-name GDK_NOTIFY_INFERIOR))
  (value (name nonlinear) (c-name GDK_NOTIFY_NONLINEAR))
  (value (name nonlinear_virtual) (c-name GDK_NOTIFY_NONLINEAR_VIRTUAL))
  (value (name unknown) (c-name GDK_NOTIFY_UNKNOWN))
)

(enum CrossingMode
  (in-module gdk)
  (c-name GdkCrossingMode)
  (value (name normal) (c-name GDK_CROSSING_NORMAL))
  (value (name grab) (c-name GDK_CROSSING_GRAB))
  (value (name ungrab) (c-name GDK_CROSSING_UNGRAB))
)

(enum PropertyState
  (in-module gdk)
  (c-name GdkPropertyState)
  (value (name new_value) (c-name GDK_PROPERTY_NEW_VALUE))
  (value (name delete) (c-name GDK_PROPERTY_DELETE))
)

(enum WindowState
  (in-module gdk)
  (c-name GdkWindowState)
  (value (name withdrawn) (c-name GDK_WINDOW_STATE_WITHDRAWN))
  (value (name iconified) (c-name GDK_WINDOW_STATE_ICONIFIED))
  (value (name maximized) (c-name GDK_WINDOW_STATE_MAXIMIZED))
  (value (name sticky) (c-name GDK_WINDOW_STATE_STICKY))
  (value (name fullscreen) (c-name GDK_WINDOW_STATE_FULLSCREEN))
)

(enum SettingAction
  (in-module gdk)
  (c-name GdkSettingAction)
  (value (name new) (c-name GDK_SETTING_ACTION_NEW))
  (value (name changed) (c-name GDK_SETTING_ACTION_CHANGED))
  (value (name deleted) (c-name GDK_SETTING_ACTION_DELETED))
)

(enum FontType
  (in-module gdk)
  (c-name GdkFontType)
  (value (name font) (c-name GDK_FONT_FONT))
  (value (name fontset) (c-name GDK_FONT_FONTSET))
)

(enum CapStyle
  (in-module gdk)
  (c-name GdkCapStyle)
  (value (name not_last) (c-name GDK_CAP_NOT_LAST))
  (value (name butt) (c-name GDK_CAP_BUTT))
  (value (name round) (c-name GDK_CAP_ROUND))
  (value (name projecting) (c-name GDK_CAP_PROJECTING))
)

(enum Fill
  (in-module gdk)
  (c-name GdkFill)
  (value (name solid) (c-name GDK_SOLID))
  (value (name tiled) (c-name GDK_TILED))
  (value (name stippled) (c-name GDK_STIPPLED))
  (value (name opaque_stippled) (c-name GDK_OPAQUE_STIPPLED))
)

(enum Function
  (in-module gdk)
  (c-name GdkFunction)
  (value (name copy) (c-name GDK_COPY))
  (value (name invert) (c-name GDK_INVERT))
  (value (name xor) (c-name GDK_XOR))
  (value (name clear) (c-name GDK_CLEAR))
  (value (name and) (c-name GDK_AND))
  (value (name and_reverse) (c-name GDK_AND_REVERSE))
  (value (name and_invert) (c-name GDK_AND_INVERT))
  (value (name noop) (c-name GDK_NOOP))
  (value (name or) (c-name GDK_OR))
  (value (name equiv) (c-name GDK_EQUIV))
  (value (name or_reverse) (c-name GDK_OR_REVERSE))
  (value (name copy_invert) (c-name GDK_COPY_INVERT))
  (value (name or_invert) (c-name GDK_OR_INVERT))
  (value (name nand) (c-name GDK_NAND))
  (value (name nor) (c-name GDK_NOR))
  (value (name set) (c-name GDK_SET))
)

(enum JoinStyle
  (in-module gdk)
  (c-name GdkJoinStyle)
  (value (name dk_join_miter) (c-name GDK_JOIN_MITER))
  (value (name dk_join_round) (c-name GDK_JOIN_ROUND))
  (value (name dk_join_bevel) (c-name GDK_JOIN_BEVEL))
)

(enum LineStyle
  (in-module gdk)
  (c-name GdkLineStyle)
  (value (name solid) (c-name GDK_LINE_SOLID))
  (value (name on_off_dash) (c-name GDK_LINE_ON_OFF_DASH))
  (value (name double_dash) (c-name GDK_LINE_DOUBLE_DASH))
)

(enum SubwindowMode
  (in-module gdk)
  (c-name GdkSubwindowMode)
  (value (name clip_by_children) (c-name GDK_CLIP_BY_CHILDREN))
  (value (name include_inferiors) (c-name GDK_INCLUDE_INFERIORS))
)

(enum GCValuesMask
  (in-module gdk)
  (c-name GdkGCValuesMask)
  (value (name foreground) (c-name GDK_GC_FOREGROUND))
  (value (name background) (c-name GDK_GC_BACKGROUND))
  (value (name font) (c-name GDK_GC_FONT))
  (value (name function) (c-name GDK_GC_FUNCTION))
  (value (name fill) (c-name GDK_GC_FILL))
  (value (name tile) (c-name GDK_GC_TILE))
  (value (name stipple) (c-name GDK_GC_STIPPLE))
  (value (name clip_mask) (c-name GDK_GC_CLIP_MASK))
  (value (name subwindow) (c-name GDK_GC_SUBWINDOW))
  (value (name ts_x_origin) (c-name GDK_GC_TS_X_ORIGIN))
  (value (name ts_y_origin) (c-name GDK_GC_TS_Y_ORIGIN))
  (value (name clip_x_origin) (c-name GDK_GC_CLIP_X_ORIGIN))
  (value (name clip_y_origin) (c-name GDK_GC_CLIP_Y_ORIGIN))
  (value (name exposures) (c-name GDK_GC_EXPOSURES))
  (value (name line_width) (c-name GDK_GC_LINE_WIDTH))
  (value (name line_style) (c-name GDK_GC_LINE_STYLE))
  (value (name cap_style) (c-name GDK_GC_CAP_STYLE))
  (value (name join_style) (c-name GDK_GC_JOIN_STYLE))
)

(enum ImageType
  (in-module gdk)
  (c-name GdkImageType)
  (value (name normal) (c-name GDK_IMAGE_NORMAL))
  (value (name shared) (c-name GDK_IMAGE_SHARED))
  (value (name fastest) (c-name GDK_IMAGE_FASTEST))
)

(enum ExtensionMode
  (in-module gdk)
  (c-name GdkExtensionMode)
  (value (name none) (c-name GDK_EXTENSION_EVENTS_NONE))
  (value (name all) (c-name GDK_EXTENSION_EVENTS_ALL))
  (value (name cursor) (c-name GDK_EXTENSION_EVENTS_CURSOR))
)

(enum InputSource
  (in-module gdk)
  (c-name GdkInputSource)
  (value (name mouse) (c-name GDK_SOURCE_MOUSE))
  (value (name pen) (c-name GDK_SOURCE_PEN))
  (value (name eraser) (c-name GDK_SOURCE_ERASER))
  (value (name cursor) (c-name GDK_SOURCE_CURSOR))
)

(enum InputMode
  (in-module gdk)
  (c-name GdkInputMode)
  (value (name disabled) (c-name GDK_MODE_DISABLED))
  (value (name screen) (c-name GDK_MODE_SCREEN))
  (value (name window) (c-name GDK_MODE_WINDOW))
)

(enum AxisUse
  (in-module gdk)
  (c-name GdkAxisUse)
  (value (name ignore) (c-name GDK_AXIS_IGNORE))
  (value (name x) (c-name GDK_AXIS_X))
  (value (name y) (c-name GDK_AXIS_Y))
  (value (name pressure) (c-name GDK_AXIS_PRESSURE))
  (value (name xtilt) (c-name GDK_AXIS_XTILT))
  (value (name ytilt) (c-name GDK_AXIS_YTILT))
  (value (name wheel) (c-name GDK_AXIS_WHEEL))
  (value (name last) (c-name GDK_AXIS_LAST))
)

(enum PropMode
  (in-module gdk)
  (c-name GdkPropMode)
  (value (name replace) (c-name GDK_PROP_MODE_REPLACE))
  (value (name prepend) (c-name GDK_PROP_MODE_PREPEND))
  (value (name append) (c-name GDK_PROP_MODE_APPEND))
)

(enum FillRule
  (in-module gdk)
  (c-name GdkFillRule)
  (value (name even_odd_rule) (c-name GDK_EVEN_ODD_RULE))
  (value (name winding_rule) (c-name GDK_WINDING_RULE))
)

(enum OverlapType
  (in-module gdk)
  (c-name GdkOverlapType)
  (value (name in) (c-name GDK_OVERLAP_RECTANGLE_IN))
  (value (name out) (c-name GDK_OVERLAP_RECTANGLE_OUT))
  (value (name part) (c-name GDK_OVERLAP_RECTANGLE_PART))
)

(enum RgbDither
  (in-module gdk)
  (c-name GdkRgbDither)
  (value (name none) (c-name GDK_RGB_DITHER_NONE))
  (value (name normal) (c-name GDK_RGB_DITHER_NORMAL))
  (value (name max) (c-name GDK_RGB_DITHER_MAX))
)

(enum ByteOrder
  (in-module gdk)
  (c-name GdkByteOrder)
  (value (name dk_lsb_first) (c-name GDK_LSB_FIRST))
  (value (name dk_msb_first) (c-name GDK_MSB_FIRST))
)

(enum ModifierType
  (in-module gdk)
  (c-name GdkModifierType)
  (value (name shift_mask) (c-name GDK_SHIFT_MASK))
  (value (name lock_mask) (c-name GDK_LOCK_MASK))
  (value (name control_mask) (c-name GDK_CONTROL_MASK))
  (value (name mod1_mask) (c-name GDK_MOD1_MASK))
  (value (name mod2_mask) (c-name GDK_MOD2_MASK))
  (value (name mod3_mask) (c-name GDK_MOD3_MASK))
  (value (name mod4_mask) (c-name GDK_MOD4_MASK))
  (value (name mod5_mask) (c-name GDK_MOD5_MASK))
  (value (name button1_mask) (c-name GDK_BUTTON1_MASK))
  (value (name button2_mask) (c-name GDK_BUTTON2_MASK))
  (value (name button3_mask) (c-name GDK_BUTTON3_MASK))
  (value (name button4_mask) (c-name GDK_BUTTON4_MASK))
  (value (name button5_mask) (c-name GDK_BUTTON5_MASK))
  (value (name release_mask) (c-name GDK_RELEASE_MASK))
  (value (name modifier_mask) (c-name GDK_MODIFIER_MASK))
)

(enum InputCondition
  (in-module gdk)
  (c-name GdkInputCondition)
  (value (name read) (c-name GDK_INPUT_READ))
  (value (name write) (c-name GDK_INPUT_WRITE))
  (value (name exception) (c-name GDK_INPUT_EXCEPTION))
)

(enum Status
  (in-module gdk)
  (c-name GdkStatus)
  (value (name ok) (c-name GDK_OK))
  (value (name error) (c-name GDK_ERROR))
  (value (name error_param) (c-name GDK_ERROR_PARAM))
  (value (name error_file) (c-name GDK_ERROR_FILE))
  (value (name error_mem) (c-name GDK_ERROR_MEM))
)

(enum GrabStatus
  (in-module gdk)
  (c-name GdkGrabStatus)
  (value (name success) (c-name GDK_GRAB_SUCCESS))
  (value (name already_grabbed) (c-name GDK_GRAB_ALREADY_GRABBED))
  (value (name invalid_time) (c-name GDK_GRAB_INVALID_TIME))
  (value (name not_viewable) (c-name GDK_GRAB_NOT_VIEWABLE))
  (value (name frozen) (c-name GDK_GRAB_FROZEN))
)

(enum VisualType
  (in-module gdk)
  (c-name GdkVisualType)
  (value (name static_gray) (c-name GDK_VISUAL_STATIC_GRAY))
  (value (name grayscale) (c-name GDK_VISUAL_GRAYSCALE))
  (value (name static_color) (c-name GDK_VISUAL_STATIC_COLOR))
  (value (name pseudo_color) (c-name GDK_VISUAL_PSEUDO_COLOR))
  (value (name true_color) (c-name GDK_VISUAL_TRUE_COLOR))
  (value (name direct_color) (c-name GDK_VISUAL_DIRECT_COLOR))
)

(enum WindowClass
  (in-module gdk)
  (c-name GdkWindowClass)
  (value (name output) (c-name GDK_INPUT_OUTPUT))
  (value (name only) (c-name GDK_INPUT_ONLY))
)

(enum WindowType
  (in-module gdk)
  (c-name GdkWindowType)
  (value (name root) (c-name GDK_WINDOW_ROOT))
  (value (name toplevel) (c-name GDK_WINDOW_TOPLEVEL))
  (value (name child) (c-name GDK_WINDOW_CHILD))
  (value (name dialog) (c-name GDK_WINDOW_DIALOG))
  (value (name temp) (c-name GDK_WINDOW_TEMP))
  (value (name foreign) (c-name GDK_WINDOW_FOREIGN))
)

(enum WindowAttributesType
  (in-module gdk)
  (c-name GdkWindowAttributesType)
  (value (name title) (c-name GDK_WA_TITLE))
  (value (name x) (c-name GDK_WA_X))
  (value (name y) (c-name GDK_WA_Y))
  (value (name cursor) (c-name GDK_WA_CURSOR))
  (value (name colormap) (c-name GDK_WA_COLORMAP))
  (value (name visual) (c-name GDK_WA_VISUAL))
  (value (name wmclass) (c-name GDK_WA_WMCLASS))
  (value (name noredir) (c-name GDK_WA_NOREDIR))
)

(enum WindowHints
  (in-module gdk)
  (c-name GdkWindowHints)
  (value (name pos) (c-name GDK_HINT_POS))
  (value (name min_size) (c-name GDK_HINT_MIN_SIZE))
  (value (name max_size) (c-name GDK_HINT_MAX_SIZE))
  (value (name base_size) (c-name GDK_HINT_BASE_SIZE))
  (value (name aspect) (c-name GDK_HINT_ASPECT))
  (value (name resize_inc) (c-name GDK_HINT_RESIZE_INC))
  (value (name win_gravity) (c-name GDK_HINT_WIN_GRAVITY))
  (value (name user_pos) (c-name GDK_HINT_USER_POS))
  (value (name user_size) (c-name GDK_HINT_USER_SIZE))
)

(enum WindowTypeHint
  (in-module gdk)
  (c-name GdkWindowTypeHint)
  (value (name normal) (c-name GDK_WINDOW_TYPE_HINT_NORMAL))
  (value (name dialog) (c-name GDK_WINDOW_TYPE_HINT_DIALOG))
  (value (name menu) (c-name GDK_WINDOW_TYPE_HINT_MENU))
  (value (name toolbar) (c-name GDK_WINDOW_TYPE_HINT_TOOLBAR))
  (value (name splashscreen) (c-name GDK_WINDOW_TYPE_HINT_SPLASHSCREEN))
  (value (name utility) (c-name GDK_WINDOW_TYPE_HINT_UTILITY))
  (value (name dock) (c-name GDK_WINDOW_TYPE_HINT_DOCK))
  (value (name desktop) (c-name GDK_WINDOW_TYPE_HINT_DESKTOP))
)

(enum WMDecoration
  (in-module gdk)
  (c-name GdkWMDecoration)
  (value (name all) (c-name GDK_DECOR_ALL))
  (value (name border) (c-name GDK_DECOR_BORDER))
  (value (name resizeh) (c-name GDK_DECOR_RESIZEH))
  (value (name title) (c-name GDK_DECOR_TITLE))
  (value (name menu) (c-name GDK_DECOR_MENU))
  (value (name minimize) (c-name GDK_DECOR_MINIMIZE))
  (value (name maximize) (c-name GDK_DECOR_MAXIMIZE))
)

(enum WMFunction
  (in-module gdk)
  (c-name GdkWMFunction)
  (value (name all) (c-name GDK_FUNC_ALL))
  (value (name resize) (c-name GDK_FUNC_RESIZE))
  (value (name move) (c-name GDK_FUNC_MOVE))
  (value (name minimize) (c-name GDK_FUNC_MINIMIZE))
  (value (name maximize) (c-name GDK_FUNC_MAXIMIZE))
  (value (name close) (c-name GDK_FUNC_CLOSE))
)

(enum Gravity
  (in-module gdk)
  (c-name GdkGravity)
  (value (name north_west) (c-name GDK_GRAVITY_NORTH_WEST))
  (value (name north) (c-name GDK_GRAVITY_NORTH))
  (value (name north_east) (c-name GDK_GRAVITY_NORTH_EAST))
  (value (name west) (c-name GDK_GRAVITY_WEST))
  (value (name center) (c-name GDK_GRAVITY_CENTER))
  (value (name east) (c-name GDK_GRAVITY_EAST))
  (value (name south_west) (c-name GDK_GRAVITY_SOUTH_WEST))
  (value (name south) (c-name GDK_GRAVITY_SOUTH))
  (value (name south_east) (c-name GDK_GRAVITY_SOUTH_EAST))
  (value (name static) (c-name GDK_GRAVITY_STATIC))
)

(enum WindowEdge
  (in-module gdk)
  (c-name GdkWindowEdge)
  (value (name north_west) (c-name GDK_WINDOW_EDGE_NORTH_WEST))
  (value (name north) (c-name GDK_WINDOW_EDGE_NORTH))
  (value (name north_east) (c-name GDK_WINDOW_EDGE_NORTH_EAST))
  (value (name west) (c-name GDK_WINDOW_EDGE_WEST))
  (value (name east) (c-name GDK_WINDOW_EDGE_EAST))
  (value (name south_west) (c-name GDK_WINDOW_EDGE_SOUTH_WEST))
  (value (name south) (c-name GDK_WINDOW_EDGE_SOUTH))
  (value (name south_east) (c-name GDK_WINDOW_EDGE_SOUTH_EAST))
)

(function gdk_x11_drawable_get_xdisplay 
  (c-name gdk_x11_drawable_get_xdisplay)
  (return-type Display*)
  (parameter (type-and-name GdkDrawable* drawable))
)

(function gdk_x11_drawable_get_xid 
  (c-name gdk_x11_drawable_get_xid)
  (return-type XID)
  (parameter (type-and-name GdkDrawable* drawable))
)

(function gdk_x11_image_get_xdisplay 
  (c-name gdk_x11_image_get_xdisplay)
  (return-type Display*)
  (parameter (type-and-name GdkImage* image))
)

(function gdk_x11_image_get_ximage 
  (c-name gdk_x11_image_get_ximage)
  (return-type XImage*)
  (parameter (type-and-name GdkImage* image))
)

(function gdk_x11_colormap_get_xdisplay 
  (c-name gdk_x11_colormap_get_xdisplay)
  (return-type Display*)
  (parameter (type-and-name GdkColormap* colormap))
)

(function gdk_x11_colormap_get_xcolormap 
  (c-name gdk_x11_colormap_get_xcolormap)
  (return-type Colormap)
  (parameter (type-and-name GdkColormap* colormap))
)

(function gdk_x11_cursor_get_xdisplay 
  (c-name gdk_x11_cursor_get_xdisplay)
  (return-type Display*)
  (parameter (type-and-name GdkCursor* cursor))
)

(function gdk_x11_cursor_get_xcursor 
  (c-name gdk_x11_cursor_get_xcursor)
  (return-type Cursor)
  (parameter (type-and-name GdkCursor* cursor))
)

(function gdk_x11_display_get_xdisplay 
  (c-name gdk_x11_display_get_xdisplay)
  (return-type Display*)
  (parameter (type-and-name GdkDisplay* display))
)

(function gdk_x11_visual_get_xvisual 
  (c-name gdk_x11_visual_get_xvisual)
  (return-type *)
  (parameter (type-and-name GdkVisual* visual))
)

(function gdk_x11_gc_get_xdisplay 
  (c-name gdk_x11_gc_get_xdisplay)
  (return-type Display*)
  (parameter (type-and-name GdkGC* gc))
)

(function gdk_x11_gc_get_xgc 
  (c-name gdk_x11_gc_get_xgc)
  (return-type GC)
  (parameter (type-and-name GdkGC* gc))
)

(function gdk_x11_screen_get_xscreen 
  (c-name gdk_x11_screen_get_xscreen)
  (return-type *)
  (parameter (type-and-name GdkScreen* screen))
)

(function gdk_x11_screen_get_screen_number 
  (c-name gdk_x11_screen_get_screen_number)
  (return-type int)
  (parameter (type-and-name GdkScreen* screen))
)

(function gdk_x11_screen_get_window_manager_name 
  (c-name gdk_x11_screen_get_window_manager_name)
  (return-type char*)
  (parameter (type-and-name GdkScreen* screen))
)

(function gdk_x11_get_default_root_xwindow 
  (c-name gdk_x11_get_default_root_xwindow)
  (return-type Window)
)

(function gdk_x11_get_default_xdisplay 
  (c-name gdk_x11_get_default_xdisplay)
  (return-type Display*)
)

(function gdk_x11_get_default_screen 
  (c-name gdk_x11_get_default_screen)
  (return-type gint)
)

(function gdk_x11_screen_lookup_visual 
  (c-name gdk_x11_screen_lookup_visual)
  (return-type GdkVisual*)
  (parameter (type-and-name GdkScreen* screen))
  (parameter (type-and-name VisualID xvisualid))
)

(function gdkx_visual_get 
  (c-name gdkx_visual_get)
  (return-type GdkVisual*)
  (parameter (type-and-name VisualID xvisualid))
)

(function gdkx_colormap_get 
  (c-name gdkx_colormap_get)
  (return-type GdkColormap*)
  (parameter (type-and-name Colormap xcolormap))
)

(function gdk_x11_colormap_foreign_new 
  (c-name gdk_x11_colormap_foreign_new)
  (return-type GdkColormap*)
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name Colormap xcolormap))
)

(function gdk_xid_table_lookup_for_display 
  (c-name gdk_xid_table_lookup_for_display)
  (return-type gpointer)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name XID xid))
)

(function gdk_x11_get_server_time 
  (c-name gdk_x11_get_server_time)
  (return-type guint32)
  (parameter (type-and-name GdkWindow* window))
)

(function gdk_x11_screen_supports_net_wm_hint 
  (c-name gdk_x11_screen_supports_net_wm_hint)
  (return-type gboolean)
  (parameter (type-and-name GdkScreen* screen))
  (parameter (type-and-name GdkAtom property))
)

(function gdk_xid_table_lookup 
  (c-name gdk_xid_table_lookup)
  (return-type gpointer)
  (parameter (type-and-name XID xid))
)

(function gdk_net_wm_supports 
  (c-name gdk_net_wm_supports)
  (return-type gboolean)
  (parameter (type-and-name GdkAtom property))
)

(function gdk_x11_grab_server 
  (c-name gdk_x11_grab_server)
  (return-type none)
)

(function gdk_x11_ungrab_server 
  (c-name gdk_x11_ungrab_server)
  (return-type none)
)

(function gdk_x11_lookup_xdisplay 
  (c-name gdk_x11_lookup_xdisplay)
  (return-type GdkDisplay*)
  (parameter (type-and-name Display* xdisplay))
)

(function gdk_x11_atom_to_xatom_for_display 
  (c-name gdk_x11_atom_to_xatom_for_display)
  (return-type Atom)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkAtom atom))
)

(function gdk_x11_xatom_to_atom_for_display 
  (c-name gdk_x11_xatom_to_atom_for_display)
  (return-type GdkAtom)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name Atom xatom))
)

(function gdk_x11_get_xatom_by_name_for_display 
  (c-name gdk_x11_get_xatom_by_name_for_display)
  (return-type Atom)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name const-gchar* atom_name))
)

(function gdk_x11_get_xatom_name_for_display 
  (c-name gdk_x11_get_xatom_name_for_display)
  (return-type gchar*)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name Atom xatom))
)

(function gdk_x11_atom_to_xatom 
  (c-name gdk_x11_atom_to_xatom)
  (return-type Atom)
  (parameter (type-and-name GdkAtom atom))
)

(function gdk_x11_xatom_to_atom 
  (c-name gdk_x11_xatom_to_atom)
  (return-type GdkAtom)
  (parameter (type-and-name Atom xatom))
)

(function gdk_x11_get_xatom_by_name 
  (c-name gdk_x11_get_xatom_by_name)
  (return-type Atom)
  (parameter (type-and-name const-gchar* atom_name))
)

(function gdk_x11_get_xatom_name 
  (c-name gdk_x11_get_xatom_name)
  (return-type gchar*)
  (parameter (type-and-name Atom xatom))
)

(function gdk_x11_display_grab 
  (c-name gdk_x11_display_grab)
  (return-type none)
  (parameter (type-and-name GdkDisplay* display))
)

(function gdk_x11_display_ungrab 
  (c-name gdk_x11_display_ungrab)
  (return-type none)
  (parameter (type-and-name GdkDisplay* display))
)

(function gdk_x11_font_get_xfont 
  (c-name gdk_x11_font_get_xfont)
  (return-type gpointer)
  (parameter (type-and-name GdkFont* font))
)

(function gdk_x11_font_get_xdisplay 
  (c-name gdk_x11_font_get_xdisplay)
  (return-type *)
  (parameter (type-and-name GdkFont* font))
)

(function gdk_x11_font_get_name 
  (c-name gdk_x11_font_get_name)
  (return-type char*)
  (parameter (type-and-name GdkFont* font))
)

(function gdk_window_object_get_type 
  (c-name gdk_window_object_get_type)
  (return-type GType)
)

(function gdk_window_new 
  (c-name gdk_window_new)
  (return-type GdkWindow*)
  (parameter (type-and-name GdkWindow* parent))
  (parameter (type-and-name GdkWindowAttr* attributes))
  (parameter (type-and-name gint attributes_mask))
)

(function gdk_window_at_pointer 
  (c-name gdk_window_at_pointer)
  (return-type GdkWindow*)
  (parameter (type-and-name gint* win_x))
  (parameter (type-and-name gint* win_y))
)

(function gdk_window_foreign_new 
  (c-name gdk_window_foreign_new)
  (return-type GdkWindow*)
  (parameter (type-and-name GdkNativeWindow anid))
)

(function gdk_window_lookup 
  (c-name gdk_window_lookup)
  (return-type GdkWindow*)
  (parameter (type-and-name GdkNativeWindow anid))
)

(function gdk_window_foreign_new_for_display 
  (c-name gdk_window_foreign_new_for_display)
  (return-type GdkWindow*)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkNativeWindow anid))
)

(function gdk_window_lookup_for_display 
  (c-name gdk_window_lookup_for_display)
  (return-type GdkWindow*)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkNativeWindow anid))
)

(function gdk_set_sm_client_id 
  (c-name gdk_set_sm_client_id)
  (return-type none)
  (parameter (type-and-name const-gchar* sm_client_id))
)

(function gdk_window_get_pointer 
  (c-name gdk_window_get_pointer)
  (return-type GdkWindow*)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name gint* x))
  (parameter (type-and-name gint* y))
  (parameter (type-and-name GdkModifierType* mask))
)

(function gdk_window_get_parent 
  (c-name gdk_window_get_parent)
  (return-type *)
  (parameter (type-and-name GdkWindow* window))
)

(function gdk_window_get_toplevel 
  (c-name gdk_window_get_toplevel)
  (return-type *)
  (parameter (type-and-name GdkWindow* window))
)

(function gdk_window_get_children 
  (c-name gdk_window_get_children)
  (return-type *)
  (parameter (type-and-name GdkWindow* window))
)

(function gdk_window_peek_children 
  (c-name gdk_window_peek_children)
  (return-type *)
  (parameter (type-and-name GdkWindow* window))
)

(function gdk_window_get_toplevels 
  (c-name gdk_window_get_toplevels)
  (return-type *)
)

(function gdk_window_process_all_updates 
  (c-name gdk_window_process_all_updates)
  (return-type none)
)

(function gdk_window_set_debug_updates 
  (c-name gdk_window_set_debug_updates)
  (return-type none)
  (parameter (type-and-name gboolean setting))
)

(function gdk_window_constrain_size 
  (c-name gdk_window_constrain_size)
  (return-type none)
  (parameter (type-and-name GdkGeometry* geometry))
  (parameter (type-and-name guint flags))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name gint* new_width))
  (parameter (type-and-name gint* new_height))
)

(function gdk_set_pointer_hooks 
  (c-name gdk_set_pointer_hooks)
  (return-type GdkPointerHooks*)
  (parameter (type-and-name const-GdkPointerHooks* new_hooks))
)

(function gdk_get_default_root_window 
  (c-name gdk_get_default_root_window)
  (return-type GdkWindow*)
)

(function gdk_visual_get_type 
  (c-name gdk_visual_get_type)
  (return-type GType)
)

(function gdk_visual_get_best_depth 
  (c-name gdk_visual_get_best_depth)
  (return-type gint)
)

(function gdk_visual_get_best_type 
  (c-name gdk_visual_get_best_type)
  (return-type GdkVisualType)
)

(function gdk_visual_get_system 
  (c-name gdk_visual_get_system)
  (is-constructor-of GdkVisual)
  (return-type GdkVisual*)
)

(function gdk_visual_get_best 
  (c-name gdk_visual_get_best)
  (is-constructor-of GdkVisual)
  (return-type GdkVisual*)
)

(function gdk_visual_get_best_with_depth 
  (c-name gdk_visual_get_best_with_depth)
  (is-constructor-of GdkVisual)
  (return-type GdkVisual*)
  (parameter (type-and-name gint depth))
)

(function gdk_visual_get_best_with_type 
  (c-name gdk_visual_get_best_with_type)
  (is-constructor-of GdkVisual)
  (return-type GdkVisual*)
  (parameter (type-and-name GdkVisualType visual_type))
)

(function gdk_visual_get_best_with_both 
  (c-name gdk_visual_get_best_with_both)
  (is-constructor-of GdkVisual)
  (return-type GdkVisual*)
  (parameter (type-and-name gint depth))
  (parameter (type-and-name GdkVisualType visual_type))
)

(function gdk_query_depths 
  (c-name gdk_query_depths)
  (return-type none)
  (parameter (type-and-name gint** depths))
  (parameter (type-and-name gint* count))
)

(function gdk_query_visual_types 
  (c-name gdk_query_visual_types)
  (return-type none)
  (parameter (type-and-name GdkVisualType** visual_types))
  (parameter (type-and-name gint* count))
)

(function gdk_list_visuals 
  (c-name gdk_list_visuals)
  (return-type GList*)
)

(function gdk_selection_owner_set 
  (c-name gdk_selection_owner_set)
  (return-type gboolean)
  (parameter (type-and-name GdkWindow* owner))
  (parameter (type-and-name GdkAtom selection))
  (parameter (type-and-name guint32 time_))
  (parameter (type-and-name gboolean send_event))
)

(function gdk_selection_owner_get 
  (c-name gdk_selection_owner_get)
  (return-type GdkWindow*)
  (parameter (type-and-name GdkAtom selection))
)

(function gdk_selection_owner_set_for_display 
  (c-name gdk_selection_owner_set_for_display)
  (return-type gboolean)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkWindow* owner))
  (parameter (type-and-name GdkAtom selection))
  (parameter (type-and-name guint32 time_))
  (parameter (type-and-name gboolean send_event))
)

(function gdk_selection_owner_get_for_display 
  (c-name gdk_selection_owner_get_for_display)
  (return-type GdkWindow*)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkAtom selection))
)

(function gdk_selection_convert 
  (c-name gdk_selection_convert)
  (return-type none)
  (parameter (type-and-name GdkWindow* requestor))
  (parameter (type-and-name GdkAtom selection))
  (parameter (type-and-name GdkAtom target))
  (parameter (type-and-name guint32 time_))
)

(function gdk_selection_property_get 
  (c-name gdk_selection_property_get)
  (return-type gboolean)
  (parameter (type-and-name GdkWindow* requestor))
  (parameter (type-and-name guchar** data))
  (parameter (type-and-name GdkAtom* prop_type))
  (parameter (type-and-name gint* prop_format))
)

(function gdk_selection_send_notify 
  (c-name gdk_selection_send_notify)
  (return-type none)
  (parameter (type-and-name guint32 requestor))
  (parameter (type-and-name GdkAtom selection))
  (parameter (type-and-name GdkAtom target))
  (parameter (type-and-name GdkAtom property))
  (parameter (type-and-name guint32 time_))
)

(function gdk_selection_send_notify_for_display 
  (c-name gdk_selection_send_notify_for_display)
  (return-type none)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name guint32 requestor))
  (parameter (type-and-name GdkAtom selection))
  (parameter (type-and-name GdkAtom target))
  (parameter (type-and-name GdkAtom property))
  (parameter (type-and-name guint32 time_))
)

(function gdk_screen_get_type 
  (c-name gdk_screen_get_type)
  (return-type GType)
)

(method gdk_screen_get_default_colormap 
  (of-object GdkScreen)
  (c-name gdk_screen_get_default_colormap)
  (return-type GdkColormap*)
)

(method gdk_screen_set_default_colormap 
  (of-object GdkScreen)
  (c-name gdk_screen_set_default_colormap)
  (return-type none)
  (parameter (type-and-name GdkColormap* colormap))
)

(method gdk_screen_get_system_colormap 
  (of-object GdkScreen)
  (c-name gdk_screen_get_system_colormap)
  (return-type GdkColormap*)
)

(method gdk_screen_get_system_visual 
  (of-object GdkScreen)
  (c-name gdk_screen_get_system_visual)
  (return-type GdkVisual*)
)

(method gdk_screen_get_rgb_colormap 
  (of-object GdkScreen)
  (c-name gdk_screen_get_rgb_colormap)
  (return-type GdkColormap*)
)

(function gdk_screen_get_rgb_visual 
  (c-name gdk_screen_get_rgb_visual)
  (return-type *)
  (parameter (type-and-name GdkScreen* screen))
)

(function gdk_screen_get_root_window 
  (c-name gdk_screen_get_root_window)
  (return-type *)
  (parameter (type-and-name GdkScreen* screen))
)

(function gdk_screen_get_display 
  (c-name gdk_screen_get_display)
  (return-type *)
  (parameter (type-and-name GdkScreen* screen))
)

(method gdk_screen_get_number 
  (of-object GdkScreen)
  (c-name gdk_screen_get_number)
  (return-type gint)
)

(method gdk_screen_get_width 
  (of-object GdkScreen)
  (c-name gdk_screen_get_width)
  (return-type gint)
)

(method gdk_screen_get_height 
  (of-object GdkScreen)
  (c-name gdk_screen_get_height)
  (return-type gint)
)

(method gdk_screen_get_width_mm 
  (of-object GdkScreen)
  (c-name gdk_screen_get_width_mm)
  (return-type gint)
)

(method gdk_screen_get_height_mm 
  (of-object GdkScreen)
  (c-name gdk_screen_get_height_mm)
  (return-type gint)
)

(function gdk_screen_list_visuals 
  (c-name gdk_screen_list_visuals)
  (return-type *)
  (parameter (type-and-name GdkScreen* screen))
)

(function gdk_screen_get_toplevel_windows 
  (c-name gdk_screen_get_toplevel_windows)
  (return-type *)
  (parameter (type-and-name GdkScreen* screen))
)

(function gdk_screen_make_display_name 
  (c-name gdk_screen_make_display_name)
  (return-type *)
  (parameter (type-and-name GdkScreen* screen))
)

(method gdk_screen_get_n_monitors 
  (of-object GdkScreen)
  (c-name gdk_screen_get_n_monitors)
  (return-type gint)
)

(method gdk_screen_get_monitor_geometry 
  (of-object GdkScreen)
  (c-name gdk_screen_get_monitor_geometry)
  (return-type none)
  (parameter (type-and-name gint monitor_num))
  (parameter (type-and-name GdkRectangle* dest))
)

(method gdk_screen_get_monitor_at_point 
  (of-object GdkScreen)
  (c-name gdk_screen_get_monitor_at_point)
  (return-type gint)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(method gdk_screen_get_monitor_at_window 
  (of-object GdkScreen)
  (c-name gdk_screen_get_monitor_at_window)
  (return-type gint)
  (parameter (type-and-name GdkWindow* window))
)

(method gdk_screen_broadcast_client_message 
  (of-object GdkScreen)
  (c-name gdk_screen_broadcast_client_message)
  (return-type none)
  (parameter (type-and-name GdkEvent* event))
)

(function gdk_screen_get_default 
  (c-name gdk_screen_get_default)
  (is-constructor-of GdkScreen)
  (return-type GdkScreen*)
)

(method gdk_screen_get_setting 
  (of-object GdkScreen)
  (c-name gdk_screen_get_setting)
  (return-type gboolean)
  (parameter (type-and-name const-gchar* name))
  (parameter (type-and-name GValue* value))
)

(function gdk_rgb_init 
  (c-name gdk_rgb_init)
  (return-type none)
)

(function gdk_rgb_xpixel_from_rgb 
  (c-name gdk_rgb_xpixel_from_rgb)
  (return-type gulong)
  (parameter (type-and-name guint32 rgb))
)

(function gdk_rgb_gc_set_foreground 
  (c-name gdk_rgb_gc_set_foreground)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name guint32 rgb))
)

(function gdk_rgb_gc_set_background 
  (c-name gdk_rgb_gc_set_background)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name guint32 rgb))
)

(function gdk_rgb_find_color 
  (c-name gdk_rgb_find_color)
  (return-type none)
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkColor* color))
)

(function gdk_draw_rgb_image 
  (c-name gdk_draw_rgb_image)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* rgb_buf))
  (parameter (type-and-name gint rowstride))
)

(function gdk_draw_rgb_image_dithalign 
  (c-name gdk_draw_rgb_image_dithalign)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* rgb_buf))
  (parameter (type-and-name gint rowstride))
  (parameter (type-and-name gint xdith))
  (parameter (type-and-name gint ydith))
)

(function gdk_draw_rgb_32_image 
  (c-name gdk_draw_rgb_32_image)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* buf))
  (parameter (type-and-name gint rowstride))
)

(function gdk_draw_rgb_32_image_dithalign 
  (c-name gdk_draw_rgb_32_image_dithalign)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* buf))
  (parameter (type-and-name gint rowstride))
  (parameter (type-and-name gint xdith))
  (parameter (type-and-name gint ydith))
)

(function gdk_draw_gray_image 
  (c-name gdk_draw_gray_image)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* buf))
  (parameter (type-and-name gint rowstride))
)

(function gdk_draw_indexed_image 
  (c-name gdk_draw_indexed_image)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* buf))
  (parameter (type-and-name gint rowstride))
  (parameter (type-and-name GdkRgbCmap* cmap))
)

(function gdk_rgb_cmap_new 
  (c-name gdk_rgb_cmap_new)
  (is-constructor-of GdkRgbCmap)
  (return-type GdkRgbCmap*)
  (parameter (type-and-name guint32* colors))
  (parameter (type-and-name gint n_colors))
)

(function gdk_rgb_set_verbose 
  (c-name gdk_rgb_set_verbose)
  (return-type none)
  (parameter (type-and-name gboolean verbose))
)

(function gdk_rgb_set_install 
  (c-name gdk_rgb_set_install)
  (return-type none)
  (parameter (type-and-name gboolean install))
)

(function gdk_rgb_set_min_colors 
  (c-name gdk_rgb_set_min_colors)
  (return-type none)
  (parameter (type-and-name gint min_colors))
)

(function gdk_rgb_get_colormap 
  (c-name gdk_rgb_get_colormap)
  (return-type GdkColormap*)
)

(function gdk_rgb_get_visual 
  (c-name gdk_rgb_get_visual)
  (return-type *)
)

(function gdk_rgb_ditherable 
  (c-name gdk_rgb_ditherable)
  (return-type gboolean)
)

(function gdk_region_new 
  (c-name gdk_region_new)
  (return-type GdkRegion*)
)

(function gdk_region_polygon 
  (c-name gdk_region_polygon)
  (return-type GdkRegion*)
  (parameter (type-and-name GdkPoint* points))
  (parameter (type-and-name gint npoints))
  (parameter (type-and-name GdkFillRule fill_rule))
)

(function gdk_region_copy 
  (c-name gdk_region_copy)
  (return-type GdkRegion*)
  (parameter (type-and-name GdkRegion* region))
)

(function gdk_region_rectangle 
  (c-name gdk_region_rectangle)
  (return-type GdkRegion*)
  (parameter (type-and-name GdkRectangle* rectangle))
)

(function gdk_atom_intern 
  (c-name gdk_atom_intern)
  (return-type GdkAtom)
  (parameter (type-and-name const-gchar* atom_name))
  (parameter (type-and-name gboolean only_if_exists))
)

(function gdk_property_get 
  (c-name gdk_property_get)
  (return-type gboolean)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GdkAtom property))
  (parameter (type-and-name GdkAtom type))
  (parameter (type-and-name gulong offset))
  (parameter (type-and-name gulong length))
  (parameter (type-and-name gint pdelete))
  (parameter (type-and-name GdkAtom* actual_property_type))
  (parameter (type-and-name gint* actual_format))
  (parameter (type-and-name gint* actual_length))
  (parameter (type-and-name guchar** data))
)

(function gdk_property_change 
  (c-name gdk_property_change)
  (return-type none)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GdkAtom property))
  (parameter (type-and-name GdkAtom type))
  (parameter (type-and-name gint format))
  (parameter (type-and-name GdkPropMode mode))
  (parameter (type-and-name const-guchar* data))
  (parameter (type-and-name gint nelements))
)

(function gdk_property_delete 
  (c-name gdk_property_delete)
  (return-type none)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GdkAtom property))
)

(function gdk_text_property_to_text_list 
  (c-name gdk_text_property_to_text_list)
  (return-type gint)
  (parameter (type-and-name GdkAtom encoding))
  (parameter (type-and-name gint format))
  (parameter (type-and-name const-guchar* text))
  (parameter (type-and-name gint length))
  (parameter (type-and-name gchar*** list))
)

(function gdk_text_property_to_utf8_list 
  (c-name gdk_text_property_to_utf8_list)
  (return-type gint)
  (parameter (type-and-name GdkAtom encoding))
  (parameter (type-and-name gint format))
  (parameter (type-and-name const-guchar* text))
  (parameter (type-and-name gint length))
  (parameter (type-and-name gchar*** list))
)

(function gdk_utf8_to_compound_text 
  (c-name gdk_utf8_to_compound_text)
  (return-type gboolean)
  (parameter (type-and-name const-gchar* str))
  (parameter (type-and-name GdkAtom* encoding))
  (parameter (type-and-name gint* format))
  (parameter (type-and-name guchar** ctext))
  (parameter (type-and-name gint* length))
)

(function gdk_string_to_compound_text 
  (c-name gdk_string_to_compound_text)
  (return-type gint)
  (parameter (type-and-name const-gchar* str))
  (parameter (type-and-name GdkAtom* encoding))
  (parameter (type-and-name gint* format))
  (parameter (type-and-name guchar** ctext))
  (parameter (type-and-name gint* length))
)

(function gdk_text_property_to_text_list_for_display 
  (c-name gdk_text_property_to_text_list_for_display)
  (return-type gint)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkAtom encoding))
  (parameter (type-and-name gint format))
  (parameter (type-and-name const-guchar* text))
  (parameter (type-and-name gint length))
  (parameter (type-and-name gchar*** list))
)

(function gdk_text_property_to_utf8_list_for_display 
  (c-name gdk_text_property_to_utf8_list_for_display)
  (return-type gint)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkAtom encoding))
  (parameter (type-and-name gint format))
  (parameter (type-and-name const-guchar* text))
  (parameter (type-and-name gint length))
  (parameter (type-and-name gchar*** list))
)

(function gdk_utf8_to_string_target 
  (c-name gdk_utf8_to_string_target)
  (return-type gchar*)
  (parameter (type-and-name const-gchar* str))
)

(function gdk_string_to_compound_text_for_display 
  (c-name gdk_string_to_compound_text_for_display)
  (return-type gint)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name const-gchar* str))
  (parameter (type-and-name GdkAtom* encoding))
  (parameter (type-and-name gint* format))
  (parameter (type-and-name guchar** ctext))
  (parameter (type-and-name gint* length))
)

(function gdk_utf8_to_compound_text_for_display 
  (c-name gdk_utf8_to_compound_text_for_display)
  (return-type gboolean)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name const-gchar* str))
  (parameter (type-and-name GdkAtom* encoding))
  (parameter (type-and-name gint* format))
  (parameter (type-and-name guchar** ctext))
  (parameter (type-and-name gint* length))
)

(function gdk_free_text_list 
  (c-name gdk_free_text_list)
  (return-type none)
  (parameter (type-and-name gchar** list))
)

(function gdk_free_compound_text 
  (c-name gdk_free_compound_text)
  (return-type none)
  (parameter (type-and-name guchar* ctext))
)

(function gdk_synthesize_window_state 
  (c-name gdk_synthesize_window_state)
  (return-type none)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GdkWindowState unset_flags))
  (parameter (type-and-name GdkWindowState set_flags))
)

(function gdk_pixmap_get_type 
  (c-name gdk_pixmap_get_type)
  (return-type GType)
)

(function gdk_pixmap_new 
  (c-name gdk_pixmap_new)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name gint depth))
)

(function gdk_bitmap_create_from_data 
  (c-name gdk_bitmap_create_from_data)
  (return-type GdkBitmap*)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name const-gchar* data))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function gdk_pixmap_create_from_data 
  (c-name gdk_pixmap_create_from_data)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name const-gchar* data))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name gint depth))
  (parameter (type-and-name GdkColor* fg))
  (parameter (type-and-name GdkColor* bg))
)

(function gdk_pixmap_create_from_xpm 
  (c-name gdk_pixmap_create_from_xpm)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name const-gchar* filename))
)

(function gdk_pixmap_colormap_create_from_xpm 
  (c-name gdk_pixmap_colormap_create_from_xpm)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name const-gchar* filename))
)

(function gdk_pixmap_create_from_xpm_d 
  (c-name gdk_pixmap_create_from_xpm_d)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name gchar** data))
)

(function gdk_pixmap_colormap_create_from_xpm_d 
  (c-name gdk_pixmap_colormap_create_from_xpm_d)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name gchar** data))
)

(function gdk_pixmap_foreign_new 
  (c-name gdk_pixmap_foreign_new)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkNativeWindow anid))
)

(function gdk_pixmap_lookup 
  (c-name gdk_pixmap_lookup)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkNativeWindow anid))
)

(function gdk_pixmap_foreign_new_for_display 
  (c-name gdk_pixmap_foreign_new_for_display)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkNativeWindow anid))
)

(function gdk_pixmap_lookup_for_display 
  (c-name gdk_pixmap_lookup_for_display)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkNativeWindow anid))
)

(function gdk_pixbuf_get_from_drawable 
  (c-name gdk_pixbuf_get_from_drawable)
  (return-type GdkPixbuf*)
  (parameter (type-and-name GdkPixbuf* dest))
  (parameter (type-and-name GdkDrawable* src))
  (parameter (type-and-name GdkColormap* cmap))
  (parameter (type-and-name int src_x))
  (parameter (type-and-name int src_y))
  (parameter (type-and-name int dest_x))
  (parameter (type-and-name int dest_y))
  (parameter (type-and-name int width))
  (parameter (type-and-name int height))
)

(function gdk_pixbuf_get_from_image 
  (c-name gdk_pixbuf_get_from_image)
  (return-type GdkPixbuf*)
  (parameter (type-and-name GdkPixbuf* dest))
  (parameter (type-and-name GdkImage* src))
  (parameter (type-and-name GdkColormap* cmap))
  (parameter (type-and-name int src_x))
  (parameter (type-and-name int src_y))
  (parameter (type-and-name int dest_x))
  (parameter (type-and-name int dest_y))
  (parameter (type-and-name int width))
  (parameter (type-and-name int height))
)

(function gdk_pango_context_get_for_screen 
  (c-name gdk_pango_context_get_for_screen)
  (return-type PangoContext*)
  (parameter (type-and-name GdkScreen* screen))
)

(function gdk_pango_context_get 
  (c-name gdk_pango_context_get)
  (return-type PangoContext*)
)

(function gdk_pango_context_set_colormap 
  (c-name gdk_pango_context_set_colormap)
  (return-type none)
  (parameter (type-and-name PangoContext* context))
  (parameter (type-and-name GdkColormap* colormap))
)

(function gdk_pango_layout_line_get_clip_region 
  (c-name gdk_pango_layout_line_get_clip_region)
  (return-type GdkRegion*)
  (parameter (type-and-name PangoLayoutLine* line))
  (parameter (type-and-name gint x_origin))
  (parameter (type-and-name gint y_origin))
  (parameter (type-and-name gint* index_ranges))
  (parameter (type-and-name gint n_ranges))
)

(function gdk_pango_layout_get_clip_region 
  (c-name gdk_pango_layout_get_clip_region)
  (return-type GdkRegion*)
  (parameter (type-and-name PangoLayout* layout))
  (parameter (type-and-name gint x_origin))
  (parameter (type-and-name gint y_origin))
  (parameter (type-and-name gint* index_ranges))
  (parameter (type-and-name gint n_ranges))
)

(function gdk_pango_attr_stipple_new 
  (c-name gdk_pango_attr_stipple_new)
  (return-type PangoAttribute*)
  (parameter (type-and-name GdkBitmap* stipple))
)

(function gdk_pango_attr_embossed_new 
  (c-name gdk_pango_attr_embossed_new)
  (return-type PangoAttribute*)
  (parameter (type-and-name gboolean embossed))
)

(function gdk_keymap_get_type 
  (c-name gdk_keymap_get_type)
  (return-type GType)
)

(function gdk_keymap_get_default 
  (c-name gdk_keymap_get_default)
  (is-constructor-of GdkKeymap)
  (return-type GdkKeymap*)
)

(function gdk_keymap_get_for_display 
  (c-name gdk_keymap_get_for_display)
  (is-constructor-of GdkKeymap)
  (return-type GdkKeymap*)
  (parameter (type-and-name GdkDisplay* display))
)

(method gdk_keymap_lookup_key 
  (of-object GdkKeymap)
  (c-name gdk_keymap_lookup_key)
  (return-type guint)
  (parameter (type-and-name const-GdkKeymapKey* key))
)

(method gdk_keymap_translate_keyboard_state 
  (of-object GdkKeymap)
  (c-name gdk_keymap_translate_keyboard_state)
  (return-type gboolean)
  (parameter (type-and-name guint hardware_keycode))
  (parameter (type-and-name GdkModifierType state))
  (parameter (type-and-name gint group))
  (parameter (type-and-name guint* keyval))
  (parameter (type-and-name gint* effective_group))
  (parameter (type-and-name gint* level))
  (parameter (type-and-name GdkModifierType* consumed_modifiers))
)

(method gdk_keymap_get_entries_for_keyval 
  (of-object GdkKeymap)
  (c-name gdk_keymap_get_entries_for_keyval)
  (return-type gboolean)
  (parameter (type-and-name guint keyval))
  (parameter (type-and-name GdkKeymapKey** keys))
  (parameter (type-and-name gint* n_keys))
)

(method gdk_keymap_get_entries_for_keycode 
  (of-object GdkKeymap)
  (c-name gdk_keymap_get_entries_for_keycode)
  (return-type gboolean)
  (parameter (type-and-name guint hardware_keycode))
  (parameter (type-and-name GdkKeymapKey** keys))
  (parameter (type-and-name guint** keyvals))
  (parameter (type-and-name gint* n_entries))
)

(method gdk_keymap_get_direction 
  (of-object GdkKeymap)
  (c-name gdk_keymap_get_direction)
  (return-type PangoDirection)
)

(function gdk_keyval_name 
  (c-name gdk_keyval_name)
  (return-type gchar*)
  (parameter (type-and-name guint keyval))
)

(function gdk_keyval_from_name 
  (c-name gdk_keyval_from_name)
  (return-type guint)
  (parameter (type-and-name const-gchar* keyval_name))
)

(function gdk_keyval_convert_case 
  (c-name gdk_keyval_convert_case)
  (return-type none)
  (parameter (type-and-name guint symbol))
  (parameter (type-and-name guint* lower))
  (parameter (type-and-name guint* upper))
)

(function gdk_keyval_to_upper 
  (c-name gdk_keyval_to_upper)
  (return-type guint)
  (parameter (type-and-name guint keyval))
)

(function gdk_keyval_to_lower 
  (c-name gdk_keyval_to_lower)
  (return-type guint)
  (parameter (type-and-name guint keyval))
)

(function gdk_keyval_is_upper 
  (c-name gdk_keyval_is_upper)
  (return-type gboolean)
  (parameter (type-and-name guint keyval))
)

(function gdk_keyval_is_lower 
  (c-name gdk_keyval_is_lower)
  (return-type gboolean)
  (parameter (type-and-name guint keyval))
)

(function gdk_keyval_to_unicode 
  (c-name gdk_keyval_to_unicode)
  (return-type guint32)
  (parameter (type-and-name guint keyval))
)

(function gdk_unicode_to_keyval 
  (c-name gdk_unicode_to_keyval)
  (return-type guint)
  (parameter (type-and-name guint32 wc))
)

(function gdk_device_get_type 
  (c-name gdk_device_get_type)
  (return-type GType)
)

(function gdk_devices_list 
  (c-name gdk_devices_list)
  (return-type *)
)

(function gdk_device_free_history 
  (c-name gdk_device_free_history)
  (return-type none)
  (parameter (type-and-name GdkTimeCoord** events))
  (parameter (type-and-name gint n_events))
)

(function gdk_input_set_extension_events 
  (c-name gdk_input_set_extension_events)
  (return-type none)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name gint mask))
  (parameter (type-and-name GdkExtensionMode mode))
)

(function gdk_device_get_core_pointer 
  (c-name gdk_device_get_core_pointer)
  (is-constructor-of GdkDevice)
  (return-type GdkDevice*)
)

(function gdk_image_get_type 
  (c-name gdk_image_get_type)
  (return-type GType)
)

(function gdk_image_new 
  (c-name gdk_image_new)
  (is-constructor-of GdkImage)
  (return-type GdkImage*)
  (parameter (type-and-name GdkImageType type))
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function gdk_image_get 
  (c-name gdk_image_get)
  (is-constructor-of GdkImage)
  (return-type GdkImage*)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function gdk_image_ref 
  (c-name gdk_image_ref)
  (return-type *)
  (parameter (type-and-name GdkImage* image))
)

(method gdk_image_unref 
  (of-object GdkImage)
  (c-name gdk_image_unref)
  (return-type none)
)

(method gdk_image_put_pixel 
  (of-object GdkImage)
  (c-name gdk_image_put_pixel)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name guint32 pixel))
)

(method gdk_image_get_pixel 
  (of-object GdkImage)
  (c-name gdk_image_get_pixel)
  (return-type guint32)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(method gdk_image_set_colormap 
  (of-object GdkImage)
  (c-name gdk_image_set_colormap)
  (return-type none)
  (parameter (type-and-name GdkColormap* colormap))
)

(method gdk_image_get_colormap 
  (of-object GdkImage)
  (c-name gdk_image_get_colormap)
  (return-type GdkColormap*)
)

(function gdk_image_new_bitmap 
  (c-name gdk_image_new_bitmap)
  (is-constructor-of GdkImage)
  (return-type GdkImage*)
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name gpointer data))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function gdk_gc_get_type 
  (c-name gdk_gc_get_type)
  (return-type GType)
)

(function gdk_gc_new 
  (c-name gdk_gc_new)
  (is-constructor-of GdkGC)
  (return-type GdkGC*)
  (parameter (type-and-name GdkDrawable* drawable))
)

(function gdk_gc_new_with_values 
  (c-name gdk_gc_new_with_values)
  (is-constructor-of GdkGC)
  (return-type GdkGC*)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGCValues* values))
  (parameter (type-and-name GdkGCValuesMask values_mask))
)

(function gdk_gc_ref 
  (c-name gdk_gc_ref)
  (is-constructor-of GdkGC)
  (return-type GdkGC*)
  (parameter (type-and-name GdkGC* gc))
)

(method gdk_gc_unref 
  (of-object GdkGC)
  (c-name gdk_gc_unref)
  (return-type none)
)

(method gdk_gc_get_values 
  (of-object GdkGC)
  (c-name gdk_gc_get_values)
  (return-type none)
  (parameter (type-and-name GdkGCValues* values))
)

(method gdk_gc_set_values 
  (of-object GdkGC)
  (c-name gdk_gc_set_values)
  (return-type none)
  (parameter (type-and-name GdkGCValues* values))
  (parameter (type-and-name GdkGCValuesMask values_mask))
)

(method gdk_gc_set_foreground 
  (of-object GdkGC)
  (c-name gdk_gc_set_foreground)
  (return-type none)
  (parameter (type-and-name GdkColor* color))
)

(method gdk_gc_set_background 
  (of-object GdkGC)
  (c-name gdk_gc_set_background)
  (return-type none)
  (parameter (type-and-name GdkColor* color))
)

(method gdk_gc_set_font 
  (of-object GdkGC)
  (c-name gdk_gc_set_font)
  (return-type none)
  (parameter (type-and-name GdkFont* font))
)

(method gdk_gc_set_function 
  (of-object GdkGC)
  (c-name gdk_gc_set_function)
  (return-type none)
  (parameter (type-and-name GdkFunction function))
)

(method gdk_gc_set_fill 
  (of-object GdkGC)
  (c-name gdk_gc_set_fill)
  (return-type none)
  (parameter (type-and-name GdkFill fill))
)

(method gdk_gc_set_tile 
  (of-object GdkGC)
  (c-name gdk_gc_set_tile)
  (return-type none)
  (parameter (type-and-name GdkPixmap* tile))
)

(method gdk_gc_set_stipple 
  (of-object GdkGC)
  (c-name gdk_gc_set_stipple)
  (return-type none)
  (parameter (type-and-name GdkPixmap* stipple))
)

(method gdk_gc_set_ts_origin 
  (of-object GdkGC)
  (c-name gdk_gc_set_ts_origin)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(method gdk_gc_set_clip_origin 
  (of-object GdkGC)
  (c-name gdk_gc_set_clip_origin)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(method gdk_gc_set_clip_mask 
  (of-object GdkGC)
  (c-name gdk_gc_set_clip_mask)
  (return-type none)
  (parameter (type-and-name GdkBitmap* mask))
)

(method gdk_gc_set_clip_rectangle 
  (of-object GdkGC)
  (c-name gdk_gc_set_clip_rectangle)
  (return-type none)
  (parameter (type-and-name GdkRectangle* rectangle))
)

(method gdk_gc_set_clip_region 
  (of-object GdkGC)
  (c-name gdk_gc_set_clip_region)
  (return-type none)
  (parameter (type-and-name GdkRegion* region))
)

(method gdk_gc_set_subwindow 
  (of-object GdkGC)
  (c-name gdk_gc_set_subwindow)
  (return-type none)
  (parameter (type-and-name GdkSubwindowMode mode))
)

(method gdk_gc_set_exposures 
  (of-object GdkGC)
  (c-name gdk_gc_set_exposures)
  (return-type none)
  (parameter (type-and-name gboolean exposures))
)

(method gdk_gc_set_line_attributes 
  (of-object GdkGC)
  (c-name gdk_gc_set_line_attributes)
  (return-type none)
  (parameter (type-and-name gint line_width))
  (parameter (type-and-name GdkLineStyle line_style))
  (parameter (type-and-name GdkCapStyle cap_style))
  (parameter (type-and-name GdkJoinStyle join_style))
)

(method gdk_gc_set_dashes 
  (of-object GdkGC)
  (c-name gdk_gc_set_dashes)
  (return-type none)
  (parameter (type-and-name gint dash_offset))
  (parameter (type-and-name gint8 dash_list[]))
  (parameter (type-and-name gint n))
)

(method gdk_gc_offset 
  (of-object GdkGC)
  (c-name gdk_gc_offset)
  (return-type none)
  (parameter (type-and-name gint x_offset))
  (parameter (type-and-name gint y_offset))
)

(method gdk_gc_copy 
  (of-object GdkGC)
  (c-name gdk_gc_copy)
  (return-type none)
  (parameter (type-and-name GdkGC* src_gc))
)

(method gdk_gc_set_colormap 
  (of-object GdkGC)
  (c-name gdk_gc_set_colormap)
  (return-type none)
  (parameter (type-and-name GdkColormap* colormap))
)

(method gdk_gc_get_colormap 
  (of-object GdkGC)
  (c-name gdk_gc_get_colormap)
  (return-type GdkColormap*)
)

(method gdk_gc_set_rgb_fg_color 
  (of-object GdkGC)
  (c-name gdk_gc_set_rgb_fg_color)
  (return-type none)
  (parameter (type-and-name GdkColor* color))
)

(method gdk_gc_set_rgb_bg_color 
  (of-object GdkGC)
  (c-name gdk_gc_set_rgb_bg_color)
  (return-type none)
  (parameter (type-and-name GdkColor* color))
)

(function gdk_gc_get_screen 
  (c-name gdk_gc_get_screen)
  (return-type *)
  (parameter (type-and-name GdkGC* gc))
)

(function gdk_font_get_type 
  (c-name gdk_font_get_type)
  (return-type GType)
)

(function gdk_font_ref 
  (c-name gdk_font_ref)
  (is-constructor-of GdkFont)
  (return-type GdkFont*)
  (parameter (type-and-name GdkFont* font))
)

(function gdk_font_id 
  (c-name gdk_font_id)
  (return-type gint)
  (parameter (type-and-name const-GdkFont* font))
)

(function gdk_font_equal 
  (c-name gdk_font_equal)
  (return-type gboolean)
  (parameter (type-and-name const-GdkFont* fonta))
  (parameter (type-and-name const-GdkFont* fontb))
)

(function gdk_font_load_for_display 
  (c-name gdk_font_load_for_display)
  (is-constructor-of GdkFont)
  (return-type GdkFont*)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name const-gchar* font_name))
)

(function gdk_fontset_load_for_display 
  (c-name gdk_fontset_load_for_display)
  (is-constructor-of GdkFont)
  (return-type GdkFont*)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name const-gchar* fontset_name))
)

(function gdk_font_from_description_for_display 
  (c-name gdk_font_from_description_for_display)
  (is-constructor-of GdkFont)
  (return-type GdkFont*)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name PangoFontDescription* font_desc))
)

(function gdk_font_load 
  (c-name gdk_font_load)
  (is-constructor-of GdkFont)
  (return-type GdkFont*)
  (parameter (type-and-name const-gchar* font_name))
)

(function gdk_fontset_load 
  (c-name gdk_fontset_load)
  (is-constructor-of GdkFont)
  (return-type GdkFont*)
  (parameter (type-and-name const-gchar* fontset_name))
)

(function gdk_font_from_description 
  (c-name gdk_font_from_description)
  (is-constructor-of GdkFont)
  (return-type GdkFont*)
  (parameter (type-and-name PangoFontDescription* font_desc))
)

(function gdk_string_width 
  (c-name gdk_string_width)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name const-gchar* string))
)

(function gdk_text_width 
  (c-name gdk_text_width)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
)

(function gdk_text_width_wc 
  (c-name gdk_text_width_wc)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name const-GdkWChar* text))
  (parameter (type-and-name gint text_length))
)

(function gdk_char_width 
  (c-name gdk_char_width)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name gchar character))
)

(function gdk_char_width_wc 
  (c-name gdk_char_width_wc)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name GdkWChar character))
)

(function gdk_string_measure 
  (c-name gdk_string_measure)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name const-gchar* string))
)

(function gdk_text_measure 
  (c-name gdk_text_measure)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
)

(function gdk_char_measure 
  (c-name gdk_char_measure)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name gchar character))
)

(function gdk_string_height 
  (c-name gdk_string_height)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name const-gchar* string))
)

(function gdk_text_height 
  (c-name gdk_text_height)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
)

(function gdk_char_height 
  (c-name gdk_char_height)
  (return-type gint)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name gchar character))
)

(function gdk_text_extents 
  (c-name gdk_text_extents)
  (return-type none)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
  (parameter (type-and-name gint* lbearing))
  (parameter (type-and-name gint* rbearing))
  (parameter (type-and-name gint* width))
  (parameter (type-and-name gint* ascent))
  (parameter (type-and-name gint* descent))
)

(function gdk_text_extents_wc 
  (c-name gdk_text_extents_wc)
  (return-type none)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name const-GdkWChar* text))
  (parameter (type-and-name gint text_length))
  (parameter (type-and-name gint* lbearing))
  (parameter (type-and-name gint* rbearing))
  (parameter (type-and-name gint* width))
  (parameter (type-and-name gint* ascent))
  (parameter (type-and-name gint* descent))
)

(function gdk_string_extents 
  (c-name gdk_string_extents)
  (return-type none)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name const-gchar* string))
  (parameter (type-and-name gint* lbearing))
  (parameter (type-and-name gint* rbearing))
  (parameter (type-and-name gint* width))
  (parameter (type-and-name gint* ascent))
  (parameter (type-and-name gint* descent))
)

(function gdk_font_get_display 
  (c-name gdk_font_get_display)
  (return-type *)
  (parameter (type-and-name GdkFont* font))
)

(function gdk_event_get_type 
  (c-name gdk_event_get_type)
  (return-type GType)
)

(function gdk_events_pending 
  (c-name gdk_events_pending)
  (return-type gboolean)
)

(function gdk_event_get 
  (c-name gdk_event_get)
  (return-type GdkEvent*)
)

(function gdk_event_peek 
  (c-name gdk_event_peek)
  (return-type GdkEvent*)
)

(function gdk_event_get_graphics_expose 
  (c-name gdk_event_get_graphics_expose)
  (return-type GdkEvent*)
  (parameter (type-and-name GdkWindow* window))
)

(function gdk_event_new 
  (c-name gdk_event_new)
  (return-type GdkEvent*)
  (parameter (type-and-name GdkEventType type))
)

(function gdk_event_copy 
  (c-name gdk_event_copy)
  (return-type GdkEvent*)
  (parameter (type-and-name GdkEvent* event))
)

(function gdk_event_handler_set 
  (c-name gdk_event_handler_set)
  (return-type none)
  (parameter (type-and-name GdkEventFunc func))
  (parameter (type-and-name gpointer data))
  (parameter (type-and-name GDestroyNotify notify))
)

(function gdk_set_show_events 
  (c-name gdk_set_show_events)
  (return-type none)
  (parameter (type-and-name gboolean show_events))
)

(function gdk_get_show_events 
  (c-name gdk_get_show_events)
  (return-type gboolean)
)

(function gdk_add_client_message_filter 
  (c-name gdk_add_client_message_filter)
  (return-type none)
  (parameter (type-and-name GdkAtom message_type))
  (parameter (type-and-name GdkFilterFunc func))
  (parameter (type-and-name gpointer data))
)

(function gdk_setting_get 
  (c-name gdk_setting_get)
  (return-type gboolean)
  (parameter (type-and-name const-gchar* name))
  (parameter (type-and-name GValue* value))
)

(function gdk_cursor_type_get_type 
  (c-name gdk_cursor_type_get_type)
  (return-type GType)
)

(function gdk_drag_action_get_type 
  (c-name gdk_drag_action_get_type)
  (return-type GType)
)

(function gdk_drag_protocol_get_type 
  (c-name gdk_drag_protocol_get_type)
  (return-type GType)
)

(function gdk_filter_return_get_type 
  (c-name gdk_filter_return_get_type)
  (return-type GType)
)

(function gdk_event_type_get_type 
  (c-name gdk_event_type_get_type)
  (return-type GType)
)

(function gdk_event_mask_get_type 
  (c-name gdk_event_mask_get_type)
  (return-type GType)
)

(function gdk_visibility_state_get_type 
  (c-name gdk_visibility_state_get_type)
  (return-type GType)
)

(function gdk_scroll_direction_get_type 
  (c-name gdk_scroll_direction_get_type)
  (return-type GType)
)

(function gdk_notify_type_get_type 
  (c-name gdk_notify_type_get_type)
  (return-type GType)
)

(function gdk_crossing_mode_get_type 
  (c-name gdk_crossing_mode_get_type)
  (return-type GType)
)

(function gdk_property_state_get_type 
  (c-name gdk_property_state_get_type)
  (return-type GType)
)

(function gdk_window_state_get_type 
  (c-name gdk_window_state_get_type)
  (return-type GType)
)

(function gdk_setting_action_get_type 
  (c-name gdk_setting_action_get_type)
  (return-type GType)
)

(function gdk_font_type_get_type 
  (c-name gdk_font_type_get_type)
  (return-type GType)
)

(function gdk_cap_style_get_type 
  (c-name gdk_cap_style_get_type)
  (return-type GType)
)

(function gdk_fill_get_type 
  (c-name gdk_fill_get_type)
  (return-type GType)
)

(function gdk_function_get_type 
  (c-name gdk_function_get_type)
  (return-type GType)
)

(function gdk_join_style_get_type 
  (c-name gdk_join_style_get_type)
  (return-type GType)
)

(function gdk_line_style_get_type 
  (c-name gdk_line_style_get_type)
  (return-type GType)
)

(function gdk_subwindow_mode_get_type 
  (c-name gdk_subwindow_mode_get_type)
  (return-type GType)
)

(function gdk_gc_values_mask_get_type 
  (c-name gdk_gc_values_mask_get_type)
  (return-type GType)
)

(function gdk_image_type_get_type 
  (c-name gdk_image_type_get_type)
  (return-type GType)
)

(function gdk_extension_mode_get_type 
  (c-name gdk_extension_mode_get_type)
  (return-type GType)
)

(function gdk_input_source_get_type 
  (c-name gdk_input_source_get_type)
  (return-type GType)
)

(function gdk_input_mode_get_type 
  (c-name gdk_input_mode_get_type)
  (return-type GType)
)

(function gdk_axis_use_get_type 
  (c-name gdk_axis_use_get_type)
  (return-type GType)
)

(function gdk_prop_mode_get_type 
  (c-name gdk_prop_mode_get_type)
  (return-type GType)
)

(function gdk_fill_rule_get_type 
  (c-name gdk_fill_rule_get_type)
  (return-type GType)
)

(function gdk_overlap_type_get_type 
  (c-name gdk_overlap_type_get_type)
  (return-type GType)
)

(function gdk_rgb_dither_get_type 
  (c-name gdk_rgb_dither_get_type)
  (return-type GType)
)

(function gdk_byte_order_get_type 
  (c-name gdk_byte_order_get_type)
  (return-type GType)
)

(function gdk_modifier_type_get_type 
  (c-name gdk_modifier_type_get_type)
  (return-type GType)
)

(function gdk_input_condition_get_type 
  (c-name gdk_input_condition_get_type)
  (return-type GType)
)

(function gdk_status_get_type 
  (c-name gdk_status_get_type)
  (return-type GType)
)

(function gdk_grab_status_get_type 
  (c-name gdk_grab_status_get_type)
  (return-type GType)
)

(function gdk_visual_type_get_type 
  (c-name gdk_visual_type_get_type)
  (return-type GType)
)

(function gdk_window_class_get_type 
  (c-name gdk_window_class_get_type)
  (return-type GType)
)

(function gdk_window_type_get_type 
  (c-name gdk_window_type_get_type)
  (return-type GType)
)

(function gdk_window_attributes_type_get_type 
  (c-name gdk_window_attributes_type_get_type)
  (return-type GType)
)

(function gdk_window_hints_get_type 
  (c-name gdk_window_hints_get_type)
  (return-type GType)
)

(function gdk_window_type_hint_get_type 
  (c-name gdk_window_type_hint_get_type)
  (return-type GType)
)

(function gdk_wm_decoration_get_type 
  (c-name gdk_wm_decoration_get_type)
  (return-type GType)
)

(function gdk_wm_function_get_type 
  (c-name gdk_wm_function_get_type)
  (return-type GType)
)

(function gdk_gravity_get_type 
  (c-name gdk_gravity_get_type)
  (return-type GType)
)

(function gdk_window_edge_get_type 
  (c-name gdk_window_edge_get_type)
  (return-type GType)
)

(function gdk_drawable_get_type 
  (c-name gdk_drawable_get_type)
  (return-type GType)
)

(method gdk_drawable_set_data 
  (of-object GdkDrawable)
  (c-name gdk_drawable_set_data)
  (return-type none)
  (parameter (type-and-name const-gchar* key))
  (parameter (type-and-name gpointer data))
  (parameter (type-and-name GDestroyNotify destroy_func))
)

(method gdk_drawable_get_data 
  (of-object GdkDrawable)
  (c-name gdk_drawable_get_data)
  (return-type gpointer)
  (parameter (type-and-name const-gchar* key))
)

(method gdk_drawable_get_size 
  (of-object GdkDrawable)
  (c-name gdk_drawable_get_size)
  (return-type none)
  (parameter (type-and-name gint* width))
  (parameter (type-and-name gint* height))
)

(method gdk_drawable_set_colormap 
  (of-object GdkDrawable)
  (c-name gdk_drawable_set_colormap)
  (return-type none)
  (parameter (type-and-name GdkColormap* colormap))
)

(method gdk_drawable_get_colormap 
  (of-object GdkDrawable)
  (c-name gdk_drawable_get_colormap)
  (return-type GdkColormap*)
)

(method gdk_drawable_get_visual 
  (of-object GdkDrawable)
  (c-name gdk_drawable_get_visual)
  (return-type GdkVisual*)
)

(method gdk_drawable_get_depth 
  (of-object GdkDrawable)
  (c-name gdk_drawable_get_depth)
  (return-type gint)
)

(method gdk_drawable_get_screen 
  (of-object GdkDrawable)
  (c-name gdk_drawable_get_screen)
  (return-type GdkScreen*)
)

(method gdk_drawable_get_display 
  (of-object GdkDrawable)
  (c-name gdk_drawable_get_display)
  (return-type GdkDisplay*)
)

(function gdk_drawable_ref 
  (c-name gdk_drawable_ref)
  (is-constructor-of GdkDrawable)
  (return-type GdkDrawable*)
  (parameter (type-and-name GdkDrawable* drawable))
)

(method gdk_drawable_unref 
  (of-object GdkDrawable)
  (c-name gdk_drawable_unref)
  (return-type none)
)

(function gdk_draw_point 
  (c-name gdk_draw_point)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(function gdk_draw_line 
  (c-name gdk_draw_line)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x1_))
  (parameter (type-and-name gint y1_))
  (parameter (type-and-name gint x2_))
  (parameter (type-and-name gint y2_))
)

(function gdk_draw_rectangle 
  (c-name gdk_draw_rectangle)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gboolean filled))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function gdk_draw_arc 
  (c-name gdk_draw_arc)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gboolean filled))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name gint angle1))
  (parameter (type-and-name gint angle2))
)

(function gdk_draw_polygon 
  (c-name gdk_draw_polygon)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gboolean filled))
  (parameter (type-and-name GdkPoint* points))
  (parameter (type-and-name gint npoints))
)

(function gdk_draw_string 
  (c-name gdk_draw_string)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name const-gchar* string))
)

(function gdk_draw_text 
  (c-name gdk_draw_text)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
)

(function gdk_draw_text_wc 
  (c-name gdk_draw_text_wc)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name const-GdkWChar* text))
  (parameter (type-and-name gint text_length))
)

(function gdk_draw_drawable 
  (c-name gdk_draw_drawable)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkDrawable* src))
  (parameter (type-and-name gint xsrc))
  (parameter (type-and-name gint ysrc))
  (parameter (type-and-name gint xdest))
  (parameter (type-and-name gint ydest))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function gdk_draw_image 
  (c-name gdk_draw_image)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkImage* image))
  (parameter (type-and-name gint xsrc))
  (parameter (type-and-name gint ysrc))
  (parameter (type-and-name gint xdest))
  (parameter (type-and-name gint ydest))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function gdk_draw_points 
  (c-name gdk_draw_points)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkPoint* points))
  (parameter (type-and-name gint npoints))
)

(function gdk_draw_segments 
  (c-name gdk_draw_segments)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkSegment* segs))
  (parameter (type-and-name gint nsegs))
)

(function gdk_draw_lines 
  (c-name gdk_draw_lines)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkPoint* points))
  (parameter (type-and-name gint npoints))
)

(function gdk_draw_pixbuf 
  (c-name gdk_draw_pixbuf)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkPixbuf* pixbuf))
  (parameter (type-and-name gint src_x))
  (parameter (type-and-name gint src_y))
  (parameter (type-and-name gint dest_x))
  (parameter (type-and-name gint dest_y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dither))
  (parameter (type-and-name gint x_dither))
  (parameter (type-and-name gint y_dither))
)

(function gdk_draw_glyphs 
  (c-name gdk_draw_glyphs)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name PangoFont* font))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name PangoGlyphString* glyphs))
)

(function gdk_draw_layout_line 
  (c-name gdk_draw_layout_line)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name PangoLayoutLine* line))
)

(function gdk_draw_layout 
  (c-name gdk_draw_layout)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name PangoLayout* layout))
)

(function gdk_draw_layout_line_with_colors 
  (c-name gdk_draw_layout_line_with_colors)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name PangoLayoutLine* line))
  (parameter (type-and-name GdkColor* foreground))
  (parameter (type-and-name GdkColor* background))
)

(function gdk_draw_layout_with_colors 
  (c-name gdk_draw_layout_with_colors)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name PangoLayout* layout))
  (parameter (type-and-name GdkColor* foreground))
  (parameter (type-and-name GdkColor* background))
)

(method gdk_drawable_get_image 
  (of-object GdkDrawable)
  (c-name gdk_drawable_get_image)
  (return-type GdkImage*)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(method gdk_drawable_get_clip_region 
  (of-object GdkDrawable)
  (c-name gdk_drawable_get_clip_region)
  (return-type GdkRegion*)
)

(method gdk_drawable_get_visible_region 
  (of-object GdkDrawable)
  (c-name gdk_drawable_get_visible_region)
  (return-type GdkRegion*)
)

(function gdk_drag_context_get_type 
  (c-name gdk_drag_context_get_type)
  (return-type GType)
)

(function gdk_drag_context_new 
  (c-name gdk_drag_context_new)
  (return-type *)
)

(method gdk_drag_context_ref 
  (of-object GdkDragContext)
  (c-name gdk_drag_context_ref)
  (return-type none)
)

(method gdk_drag_context_unref 
  (of-object GdkDragContext)
  (c-name gdk_drag_context_unref)
  (return-type none)
)

(function gdk_drag_status 
  (c-name gdk_drag_status)
  (return-type none)
  (parameter (type-and-name GdkDragContext* context))
  (parameter (type-and-name GdkDragAction action))
  (parameter (type-and-name guint32 time_))
)

(function gdk_drop_reply 
  (c-name gdk_drop_reply)
  (return-type none)
  (parameter (type-and-name GdkDragContext* context))
  (parameter (type-and-name gboolean ok))
  (parameter (type-and-name guint32 time_))
)

(function gdk_drop_finish 
  (c-name gdk_drop_finish)
  (return-type none)
  (parameter (type-and-name GdkDragContext* context))
  (parameter (type-and-name gboolean success))
  (parameter (type-and-name guint32 time_))
)

(function gdk_drag_get_selection 
  (c-name gdk_drag_get_selection)
  (return-type GdkAtom)
  (parameter (type-and-name GdkDragContext* context))
)

(function gdk_drag_begin 
  (c-name gdk_drag_begin)
  (return-type *)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GList* targets))
)

(function gdk_drag_get_protocol_for_display 
  (c-name gdk_drag_get_protocol_for_display)
  (return-type guint32)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name guint32 xid))
  (parameter (type-and-name GdkDragProtocol* protocol))
)

(function gdk_drag_find_window_for_screen 
  (c-name gdk_drag_find_window_for_screen)
  (return-type none)
  (parameter (type-and-name GdkDragContext* context))
  (parameter (type-and-name GdkWindow* drag_window))
  (parameter (type-and-name GdkScreen* screen))
  (parameter (type-and-name gint x_root))
  (parameter (type-and-name gint y_root))
  (parameter (type-and-name GdkWindow** dest_window))
  (parameter (type-and-name GdkDragProtocol* protocol))
)

(function gdk_drag_get_protocol 
  (c-name gdk_drag_get_protocol)
  (return-type guint32)
  (parameter (type-and-name guint32 xid))
  (parameter (type-and-name GdkDragProtocol* protocol))
)

(function gdk_drag_find_window 
  (c-name gdk_drag_find_window)
  (return-type none)
  (parameter (type-and-name GdkDragContext* context))
  (parameter (type-and-name GdkWindow* drag_window))
  (parameter (type-and-name gint x_root))
  (parameter (type-and-name gint y_root))
  (parameter (type-and-name GdkWindow** dest_window))
  (parameter (type-and-name GdkDragProtocol* protocol))
)

(function gdk_drag_motion 
  (c-name gdk_drag_motion)
  (return-type gboolean)
  (parameter (type-and-name GdkDragContext* context))
  (parameter (type-and-name GdkWindow* dest_window))
  (parameter (type-and-name GdkDragProtocol protocol))
  (parameter (type-and-name gint x_root))
  (parameter (type-and-name gint y_root))
  (parameter (type-and-name GdkDragAction suggested_action))
  (parameter (type-and-name GdkDragAction possible_actions))
  (parameter (type-and-name guint32 time_))
)

(function gdk_drag_drop 
  (c-name gdk_drag_drop)
  (return-type none)
  (parameter (type-and-name GdkDragContext* context))
  (parameter (type-and-name guint32 time_))
)

(function gdk_drag_abort 
  (c-name gdk_drag_abort)
  (return-type none)
  (parameter (type-and-name GdkDragContext* context))
  (parameter (type-and-name guint32 time_))
)

(function gdk_display_manager_get_type 
  (c-name gdk_display_manager_get_type)
  (return-type GType)
)

(function gdk_display_manager_get 
  (c-name gdk_display_manager_get)
  (return-type GdkDisplayManager*)
)

(function gdk_display_manager_get_default_display 
  (c-name gdk_display_manager_get_default_display)
  (return-type *)
  (parameter (type-and-name GdkDisplayManager* display_manager))
)

(function gdk_display_manager_list_displays 
  (c-name gdk_display_manager_list_displays)
  (return-type *)
  (parameter (type-and-name GdkDisplayManager* display_manager))
)

(function gdk_display_get_type 
  (c-name gdk_display_get_type)
  (return-type GType)
)

(function gdk_display_open 
  (c-name gdk_display_open)
  (is-constructor-of GdkDisplay)
  (return-type GdkDisplay*)
  (parameter (type-and-name const-gchar* display_name))
)

(function gdk_display_get_name 
  (c-name gdk_display_get_name)
  (return-type *)
  (parameter (type-and-name GdkDisplay* display))
)

(method gdk_display_get_n_screens 
  (of-object GdkDisplay)
  (c-name gdk_display_get_n_screens)
  (return-type gint)
)

(function gdk_display_get_screen 
  (c-name gdk_display_get_screen)
  (return-type *)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name gint screen_num))
)

(function gdk_display_get_default_screen 
  (c-name gdk_display_get_default_screen)
  (return-type *)
  (parameter (type-and-name GdkDisplay* display))
)

(method gdk_display_pointer_ungrab 
  (of-object GdkDisplay)
  (c-name gdk_display_pointer_ungrab)
  (return-type none)
  (parameter (type-and-name guint32 time_))
)

(method gdk_display_keyboard_ungrab 
  (of-object GdkDisplay)
  (c-name gdk_display_keyboard_ungrab)
  (return-type none)
  (parameter (type-and-name guint32 time_))
)

(method gdk_display_pointer_is_grabbed 
  (of-object GdkDisplay)
  (c-name gdk_display_pointer_is_grabbed)
  (return-type gboolean)
)

(method gdk_display_beep 
  (of-object GdkDisplay)
  (c-name gdk_display_beep)
  (return-type none)
)

(method gdk_display_sync 
  (of-object GdkDisplay)
  (c-name gdk_display_sync)
  (return-type none)
)

(method gdk_display_close 
  (of-object GdkDisplay)
  (c-name gdk_display_close)
  (return-type none)
)

(function gdk_display_list_devices 
  (c-name gdk_display_list_devices)
  (return-type *)
  (parameter (type-and-name GdkDisplay* display))
)

(method gdk_display_get_event 
  (of-object GdkDisplay)
  (c-name gdk_display_get_event)
  (return-type GdkEvent*)
)

(method gdk_display_peek_event 
  (of-object GdkDisplay)
  (c-name gdk_display_peek_event)
  (return-type GdkEvent*)
)

(method gdk_display_put_event 
  (of-object GdkDisplay)
  (c-name gdk_display_put_event)
  (return-type none)
  (parameter (type-and-name GdkEvent* event))
)

(method gdk_display_add_client_message_filter 
  (of-object GdkDisplay)
  (c-name gdk_display_add_client_message_filter)
  (return-type none)
  (parameter (type-and-name GdkAtom message_type))
  (parameter (type-and-name GdkFilterFunc func))
  (parameter (type-and-name gpointer data))
)

(method gdk_display_set_double_click_time 
  (of-object GdkDisplay)
  (c-name gdk_display_set_double_click_time)
  (return-type none)
  (parameter (type-and-name guint msec))
)

(function gdk_display_get_default 
  (c-name gdk_display_get_default)
  (is-constructor-of GdkDisplay)
  (return-type GdkDisplay*)
)

(method gdk_display_get_core_pointer 
  (of-object GdkDisplay)
  (c-name gdk_display_get_core_pointer)
  (return-type GdkDevice*)
)

(method gdk_display_get_pointer 
  (of-object GdkDisplay)
  (c-name gdk_display_get_pointer)
  (return-type none)
  (parameter (type-and-name GdkScreen** screen))
  (parameter (type-and-name gint* x))
  (parameter (type-and-name gint* y))
  (parameter (type-and-name GdkModifierType* mask))
)

(function gdk_display_get_window_at_pointer 
  (c-name gdk_display_get_window_at_pointer)
  (return-type *)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name gint* win_x))
  (parameter (type-and-name gint* win_y))
)

(method gdk_display_set_pointer_hooks 
  (of-object GdkDisplay)
  (c-name gdk_display_set_pointer_hooks)
  (return-type GdkDisplayPointerHooks*)
  (parameter (type-and-name const-GdkDisplayPointerHooks* new_hooks))
)

(function gdk_display_open_default_libgtk_only 
  (c-name gdk_display_open_default_libgtk_only)
  (is-constructor-of GdkDisplay)
  (return-type GdkDisplay*)
)

(function gdk_cursor_get_type 
  (c-name gdk_cursor_get_type)
  (return-type GType)
)

(function gdk_cursor_new_for_display 
  (c-name gdk_cursor_new_for_display)
  (is-constructor-of GdkCursor)
  (return-type GdkCursor*)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkCursorType cursor_type))
)

(function gdk_cursor_new 
  (c-name gdk_cursor_new)
  (is-constructor-of GdkCursor)
  (return-type GdkCursor*)
  (parameter (type-and-name GdkCursorType cursor_type))
)

(function gdk_cursor_new_from_pixmap 
  (c-name gdk_cursor_new_from_pixmap)
  (is-constructor-of GdkCursor)
  (return-type GdkCursor*)
  (parameter (type-and-name GdkPixmap* source))
  (parameter (type-and-name GdkPixmap* mask))
  (parameter (type-and-name GdkColor* fg))
  (parameter (type-and-name GdkColor* bg))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(function gdk_cursor_ref 
  (c-name gdk_cursor_ref)
  (is-constructor-of GdkCursor)
  (return-type GdkCursor*)
  (parameter (type-and-name GdkCursor* cursor))
)

(function gdk_colormap_get_type 
  (c-name gdk_colormap_get_type)
  (return-type GType)
)

(function gdk_colormap_new 
  (c-name gdk_colormap_new)
  (is-constructor-of GdkColormap)
  (return-type GdkColormap*)
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name gboolean allocate))
)

(function gdk_colormap_ref 
  (c-name gdk_colormap_ref)
  (is-constructor-of GdkColormap)
  (return-type GdkColormap*)
  (parameter (type-and-name GdkColormap* cmap))
)

(method gdk_colormap_unref 
  (of-object GdkColormap)
  (c-name gdk_colormap_unref)
  (return-type none)
)

(function gdk_colormap_get_system 
  (c-name gdk_colormap_get_system)
  (is-constructor-of GdkColormap)
  (return-type GdkColormap*)
)

(method gdk_colormap_get_screen 
  (of-object GdkColormap)
  (c-name gdk_colormap_get_screen)
  (return-type GdkScreen*)
)

(function gdk_colormap_get_system_size 
  (c-name gdk_colormap_get_system_size)
  (return-type gint)
)

(method gdk_colormap_change 
  (of-object GdkColormap)
  (c-name gdk_colormap_change)
  (return-type none)
  (parameter (type-and-name gint ncolors))
)

(method gdk_colormap_alloc_colors 
  (of-object GdkColormap)
  (c-name gdk_colormap_alloc_colors)
  (return-type gint)
  (parameter (type-and-name GdkColor* colors))
  (parameter (type-and-name gint ncolors))
  (parameter (type-and-name gboolean writeable))
  (parameter (type-and-name gboolean best_match))
  (parameter (type-and-name gboolean* success))
)

(method gdk_colormap_alloc_color 
  (of-object GdkColormap)
  (c-name gdk_colormap_alloc_color)
  (return-type gboolean)
  (parameter (type-and-name GdkColor* color))
  (parameter (type-and-name gboolean writeable))
  (parameter (type-and-name gboolean best_match))
)

(method gdk_colormap_free_colors 
  (of-object GdkColormap)
  (c-name gdk_colormap_free_colors)
  (return-type none)
  (parameter (type-and-name GdkColor* colors))
  (parameter (type-and-name gint ncolors))
)

(method gdk_colormap_query_color 
  (of-object GdkColormap)
  (c-name gdk_colormap_query_color)
  (return-type none)
  (parameter (type-and-name gulong pixel))
  (parameter (type-and-name GdkColor* result))
)

(method gdk_colormap_get_visual 
  (of-object GdkColormap)
  (c-name gdk_colormap_get_visual)
  (return-type GdkVisual*)
)

(function gdk_color_copy 
  (c-name gdk_color_copy)
  (is-constructor-of GdkColor)
  (return-type GdkColor*)
  (parameter (type-and-name const-GdkColor* color))
)

(function gdk_color_parse 
  (c-name gdk_color_parse)
  (return-type gint)
  (parameter (type-and-name const-gchar* spec))
  (parameter (type-and-name GdkColor* color))
)

(function gdk_color_hash 
  (c-name gdk_color_hash)
  (return-type guint)
  (parameter (type-and-name const-GdkColor* colora))
)

(function gdk_color_equal 
  (c-name gdk_color_equal)
  (return-type gboolean)
  (parameter (type-and-name const-GdkColor* colora))
  (parameter (type-and-name const-GdkColor* colorb))
)

(function gdk_color_get_type 
  (c-name gdk_color_get_type)
  (return-type GType)
)

(function gdk_colors_store 
  (c-name gdk_colors_store)
  (return-type none)
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkColor* colors))
  (parameter (type-and-name gint ncolors))
)

(function gdk_color_white 
  (c-name gdk_color_white)
  (return-type gint)
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkColor* color))
)

(function gdk_color_black 
  (c-name gdk_color_black)
  (return-type gint)
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkColor* color))
)

(function gdk_color_alloc 
  (c-name gdk_color_alloc)
  (return-type gint)
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkColor* color))
)

(function gdk_color_change 
  (c-name gdk_color_change)
  (return-type gint)
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkColor* color))
)

(function gdk_colors_alloc 
  (c-name gdk_colors_alloc)
  (return-type gint)
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name gboolean contiguous))
  (parameter (type-and-name gulong* planes))
  (parameter (type-and-name gint nplanes))
  (parameter (type-and-name gulong* pixels))
  (parameter (type-and-name gint npixels))
)

(function gdk_colors_free 
  (c-name gdk_colors_free)
  (return-type none)
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name gulong* pixels))
  (parameter (type-and-name gint npixels))
  (parameter (type-and-name gulong planes))
)

(function gdk_parse_args 
  (c-name gdk_parse_args)
  (return-type none)
  (parameter (type-and-name gint* argc))
  (parameter (type-and-name gchar*** argv))
)

(function gdk_init 
  (c-name gdk_init)
  (return-type none)
  (parameter (type-and-name gint* argc))
  (parameter (type-and-name gchar*** argv))
)

(function gdk_init_check 
  (c-name gdk_init_check)
  (return-type gboolean)
  (parameter (type-and-name gint* argc))
  (parameter (type-and-name gchar*** argv))
)

(function gdk_exit 
  (c-name gdk_exit)
  (return-type none)
  (parameter (type-and-name gint error_code))
)

(function gdk_set_locale 
  (c-name gdk_set_locale)
  (return-type gchar*)
)

(function gdk_get_program_class 
  (c-name gdk_get_program_class)
  (return-type char*)
)

(function gdk_set_program_class 
  (c-name gdk_set_program_class)
  (return-type none)
  (parameter (type-and-name const-char* program_class))
)

(function gdk_error_trap_push 
  (c-name gdk_error_trap_push)
  (return-type none)
)

(function gdk_error_trap_pop 
  (c-name gdk_error_trap_pop)
  (return-type gint)
)

(function gdk_set_use_xshm 
  (c-name gdk_set_use_xshm)
  (return-type none)
  (parameter (type-and-name gboolean use_xshm))
)

(function gdk_get_use_xshm 
  (c-name gdk_get_use_xshm)
  (return-type gboolean)
)

(function gdk_get_display 
  (c-name gdk_get_display)
  (return-type gchar*)
)

(function gdk_get_display_arg_name 
  (c-name gdk_get_display_arg_name)
  (return-type gchar*)
)

(function gdk_input_add_full 
  (c-name gdk_input_add_full)
  (return-type gint)
  (parameter (type-and-name gint source))
  (parameter (type-and-name GdkInputCondition condition))
  (parameter (type-and-name GdkInputFunction function))
  (parameter (type-and-name gpointer data))
  (parameter (type-and-name GdkDestroyNotify destroy))
)

(function gdk_input_add 
  (c-name gdk_input_add)
  (return-type gint)
  (parameter (type-and-name gint source))
  (parameter (type-and-name GdkInputCondition condition))
  (parameter (type-and-name GdkInputFunction function))
  (parameter (type-and-name gpointer data))
)

(function gdk_input_remove 
  (c-name gdk_input_remove)
  (return-type none)
  (parameter (type-and-name gint tag))
)

(function gdk_pointer_grab 
  (c-name gdk_pointer_grab)
  (return-type GdkGrabStatus)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name gboolean owner_events))
  (parameter (type-and-name GdkEventMask event_mask))
  (parameter (type-and-name GdkWindow* confine_to))
  (parameter (type-and-name GdkCursor* cursor))
  (parameter (type-and-name guint32 time_))
)

(function gdk_keyboard_grab 
  (c-name gdk_keyboard_grab)
  (return-type GdkGrabStatus)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name gboolean owner_events))
  (parameter (type-and-name guint32 time_))
)

(function gdk_pointer_ungrab 
  (c-name gdk_pointer_ungrab)
  (return-type none)
  (parameter (type-and-name guint32 time_))
)

(function gdk_keyboard_ungrab 
  (c-name gdk_keyboard_ungrab)
  (return-type none)
  (parameter (type-and-name guint32 time_))
)

(function gdk_pointer_is_grabbed 
  (c-name gdk_pointer_is_grabbed)
  (return-type gboolean)
)

(function gdk_screen_width 
  (c-name gdk_screen_width)
  (return-type gint)
)

(function gdk_screen_height 
  (c-name gdk_screen_height)
  (return-type gint)
)

(function gdk_screen_width_mm 
  (c-name gdk_screen_width_mm)
  (return-type gint)
)

(function gdk_screen_height_mm 
  (c-name gdk_screen_height_mm)
  (return-type gint)
)

(function gdk_beep 
  (c-name gdk_beep)
  (return-type none)
)

(function gdk_flush 
  (c-name gdk_flush)
  (return-type none)
)

(function gdk_set_double_click_time 
  (c-name gdk_set_double_click_time)
  (return-type none)
  (parameter (type-and-name guint msec))
)

(function gdk_rectangle_get_type 
  (c-name gdk_rectangle_get_type)
  (return-type GType)
)

(function gdk_wcstombs 
  (c-name gdk_wcstombs)
  (return-type gchar*)
  (parameter (type-and-name const-GdkWChar* src))
)

(function gdk_mbstowcs 
  (c-name gdk_mbstowcs)
  (return-type gint)
  (parameter (type-and-name GdkWChar* dest))
  (parameter (type-and-name const-gchar* src))
  (parameter (type-and-name gint dest_max))
)

(function gdk_event_send_client_message_for_display 
  (c-name gdk_event_send_client_message_for_display)
  (return-type gboolean)
  (parameter (type-and-name GdkDisplay* display))
  (parameter (type-and-name GdkEvent* event))
  (parameter (type-and-name GdkNativeWindow winid))
)

(function gdk_notify_startup_complete 
  (c-name gdk_notify_startup_complete)
  (return-type none)
)

(function gdk_threads_enter 
  (c-name gdk_threads_enter)
  (return-type none)
)

(function gdk_threads_leave 
  (c-name gdk_threads_leave)
  (return-type none)
)

(function gdk_threads_init 
  (c-name gdk_threads_init)
  (return-type none)
)

  3. php_cgenerator_h2def->write_func() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:798
    0.7988     928440   4. php_cgenerator_h2def->write_method() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:536

;Could not find 

Notice: Undefined variable:  cname in /mnt/webdav/akpear/PHP_CGenerator/h2def.php on line 609

Call Stack:
    0.0000     288600   1. {main}() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:0
    0.0098     458344   2. php_cgenerator_h2def->php_cgenerator_h2def() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:803
    0.7991     928432   3. php_cgenerator_h2def->write_func() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:798
    0.7993     928440   4. php_cgenerator_h2def->write_method() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:536

;Could not find 

Notice: Undefined variable:  cname in /mnt/webdav/akpear/PHP_CGenerator/h2def.php on line 609

Call Stack:
    0.0000     288600   1. {main}() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:0
    0.0098     458344   2. php_cgenerator_h2def->php_cgenerator_h2def() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:803
    0.8010     928448   3. php_cgenerator_h2def->write_func() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:798
    0.8011     928448   4. php_cgenerator_h2def->write_method() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:536

;Could not find 
v/akpear/PHP_CGenerator/h2def.php:798
    0.7775     928120   4. php_cgenerator_h2def->write_method() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:536

;Could not find 

Notice: Undefined variable:  cname in /mnt/webdav/akpear/PHP_CGenerator/h2def.php on line 609

Call Stack:
    0.0000     288600   1. {main}() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:0
    0.0098     458344   2. php_cgenerator_h2def->php_cgenerator_h2def() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:803
    0.7835     928112   3. php_cgenerator_h2def->write_func() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:798
    0.7837     928120   4. php_cgenerator_h2def->write_method() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:536

;Could not find 

Notice: Undefined variable:  cname in /mnt/webdav/akpear/PHP_CGenerator/h2def.php on line 609

Call Stack:
    0.0000     288600   1. {main}() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:0
    0.0098     458344   2. php_cgenerator_h2def->php_cgenerator_h2def() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:803
    0.7957     928448   3. php_cgenerator_h2def->write_func() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:798
    0.7959     928448   4. php_cgenerator_h2def->write_method() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:536

;Could not find 

Notice: Undefined variable:  cname in /mnt/webdav/akpear/PHP_CGenerator/h2def.php on line 609

Call Stack:
    0.0000     288600   1. {main}() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:0
    0.0098     458344   2. php_cgenerator_h2def->php_cgenerator_h2def() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:803
    0.7971     928440   3. php_cgenerator_h2def->write_func() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:798
    0.7974     928440   4. php_cgenerator_h2def->write_method() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:536

;Could not find 

Notice: Undefined variable:  cname in /mnt/webdav/akpear/PHP_CGenerator/h2def.php on line 609

Call Stack:
    0.0000     288600   1. {main}() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:0
    0.0098     458344   2. php_cgenerator_h2def->php_cgenerator_h2def() /mnt/webdav/akpear/PHP_CGenerator/h2def.php:803
    0.7986     928440 